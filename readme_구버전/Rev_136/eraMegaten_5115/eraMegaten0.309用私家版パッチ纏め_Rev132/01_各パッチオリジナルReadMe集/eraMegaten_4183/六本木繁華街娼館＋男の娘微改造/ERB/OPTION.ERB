;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#
;
;	Module		:OPTION.ERB
;	Facility	:オプション設定関連の関数群です。
;
;	Licence		:ライセンスフリー
;
;	Modification Data:
;
;	Edit	Date			Author					Reason
;	001		20XX/XX/XX		----					新規作成
;	002		2011/02/04		黒天					労役実行確認省略オプション追加
;	003		2011/03/10		Ｎ鳥					夜這い不許可性別設定オプション追加
;	004		2011/04/07		Ｎ鳥					ＮＴＲ機能設定オプション追加
;	005		2011/04/08		黒天					休憩確認設定オプション追加
;	006		2011/04/25		P						PALAM表示設定と控え表示設定のオプションを追加
;	007		2011/05/05		黒天					休憩確認設定オプション拡張。[休憩]コマンドの[朝まで休憩]変更を追加
;	008		2011/06/23		黒天					妊娠機能拡張。[男の娘]の妊娠を選択できるように。
;	009		2011/09/08		Ｎ鳥					ＮＴＲ関係のオプションをひとまとめに
;	010		2012/02/28		P						入力モード切替を削除。また変更後のメッセージでWAITするように統一
;	011		2012/05/31		ネトリス				帳簿閲覧用の処理を追加
;	012		2012/12/09		P						悪魔合体のキャラ表示数設定を追加
;	013		2013/01/12		ネトリス				合体用ソフトクイック設定を追加
;	014		2013/03/15		ネトリス				野良悪魔素質ランダム設定を追加
;	015		2013/XX/XX		ひみつ					リスト表示数設定と合体用ソフトクイック設定(改)を追加
;	016		2013/12/01		J( 'ー`)し				ひみつ氏追加分と競合する悪魔合体のキャラ表示数設定と合体用ソフトクイック設定をコメントアウトしてマージ
;	017		2015/07/28		ネトリス				仲魔のTALK設定を追加
;	018		2016/09/25		多治見国々				ダンジョンの推奨レベルを表示するオプション追加。
;	019		2017/02/07		名無し					自動レベルＵＰの選択オプションを追加
;	020		2017/09/11		名無					能力確認で開いた表示情報を記録するオプション追加
;	021		2017/09/23		名無					ガチャモードを追加
;	022		2018/08/09		JK好き					ダンジョン内操作設定をGLOBALでも保存できるように変更
;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#

@SHOPCOMABLE_400
RESULTS = オプション
RETURN 1

@SHOP_COM_400
#DIM LCOUNT

DRAWLINE
PRINTL 設定項目を選択してください
PRINTFORML %"[ 0] - テキスト設定", 50, LEFT%
PRINTFORML %"[ 1] - 射精箇所設定", 50, LEFT%
PRINTFORML %"[ 2] - 着衣関連設定", 50, LEFT%
PRINTFORM %"[ 3] - 妊娠機能切り替え", 50, LEFT%[
SELECTCASE FLAG:妊娠機能
	CASE 0
		PRINT OFF
	CASE 1
		PRINT ON
	CASE 2
		PRINT ON(男の娘は除く)
ENDSELECT
PRINTL ]
;PRINTFORML %"[ 4] - 入力モード切り替え", 50, LEFT%[\@ FLAG:入力モード ? マウス  # キーボード \@]
PRINTFORML %"[ 4] - 相性のカラー設定", 50, LEFT%
PRINTFORML %"[ 5] - ムフフ展開切り替え", 50, LEFT%[\@ FLAG:ムフフ展開 ? あり  # なし \@]
PRINTFORML %"[ 6] - 出産機能切り替え", 50, LEFT%[\@ FLAG:出産機能ONOFF ? ON  # OFF \@]
PRINTFORML %"[ 7] - ＳＭ拡張機能切り替え", 50, LEFT%[\@ FLAG:44 ? あり  # なし \@]
PRINTFORML %"[ 8] - オートリカバー設定", 50, LEFT%
PRINTFORML %"[ 9] - 野外プレイ拡張機能切り替え", 50, LEFT%[\@ FLAG:46 ? あり  # なし \@]
PRINTFORML %"[10] - 触手拡張機能切り替え", 50, LEFT%[\@ FLAG:47 ? あり  # なし \@]
PRINTFORML %"[11] - TALK使用可能者", 50, LEFT%[\@ FLAG:主人以外TALK可能 ? 主人or陥落済みキャラ  # 主人のみ \@]
PRINTFORM %"[12] - 未調教時陥落機能切り替え", 50, LEFT%[
SELECTCASE FLAG:未調教時陥落
	CASE 0
		PRINT なし
	CASE 1
		PRINT 一部の人間のみ有効
	CASE 2
		PRINT 全員に有効
ENDSELECT
PRINTL ]
PRINTFORM %"[13] - ダンジョン内操作設定", 50, LEFT%[
SELECTCASE FLAG:ダンジョン内操作設定
	CASE 0
		PRINT デフォルト
	CASE 1
		PRINT ＦＰＳ
ENDSELECT
PRINTL ]
PRINTFORM %"[14] - 二択入力設定", 50, LEFT%[
SELECTCASE FLAG:二択入力設定
	CASE 0
		PRINT デフォルト
	CASE 1
		PRINT はい／いいえのみ、ＹやＮキーに反応する
	CASE 2
		PRINT 全ての二択で、ＹやＮキーに反応する
ENDSELECT
PRINTL ]
PRINTFORM %"[15] - スキル属性表示設定", 50, LEFT%[
SELECTCASE FLAG:スキル属性表示設定
	CASE 0
		PRINT デフォルト
	CASE 1
		PRINT 追加表示
ENDSELECT
PRINTL ]
;---- EDIT 労役実行確認省略オプション追加(2011/02/04) ADD START ---------
PRINTFORM %"[16] - 労役実行確認省略設定", 50, LEFT%[
SELECTCASE FLAG:労役実行確認省略設定
	CASE 0
		PRINT 省略しない
	CASE 1
		PRINT 省略する
ENDSELECT
PRINTL ]
;---- EDIT 労役実行確認省略オプション追加(2011/02/04) ADD END -----------
;---- EDIT 夜這い不許可性別設定オプション追加(2011/03/10) ADD START ---------
PRINTFORM %"[17] - 新規キャラ夜這い不許可設定", 50, LEFT%[
SELECTCASE FLAG:夜這い不許可性別
	CASE 0
		PRINT 全て許可
	CASEELSE
		SIF FLAG:夜這い不許可性別 & 1
			PRINT ♂
		SIF FLAG:夜這い不許可性別 & 4
			PRINT ♀
		SIF FLAG:夜這い不許可性別 & 2
			PRINT ？
		PRINT 不許可
ENDSELECT
PRINTL ]
;---- EDIT ＮＴＲ機能追加(2011/04/07) ADD START ---------
PRINTFORML %"[18] - ＮＴＲ機能", 50, LEFT%[\@ FLAG:ＮＴＲ機能 ?  ON # OFF \@]
;---- EDIT ＮＴＲ機能追加(2011/04/07) ADD END -----------
;---- EDIT 夜這い不許可性別設定オプション追加(2011/03/10) ADD END -----------
PRINTFORM %"[19] - 休憩確認", 50, LEFT%
SELECTCASE FLAG:休憩確認フラグ 
	CASE 0
		PRINTL [確認する]
	CASE 1
		PRINTL [確認しない]
	CASE 2
		PRINTL [確認しない + 朝まで休憩]
ENDSELECT

PRINTFORM %"[20] - PALAM表示設定", 50, LEFT%
SELECTCASE FLAG:PALAM表示設定
	CASE 0
		PRINTL [Ａタイプ]
	CASE 1
		PRINTL [Ｂタイプ]
	CASE 2
		PRINTL [Ｃタイプ]
ENDSELECT
PRINTFORM %"[21] - 控え", 50, LEFT%
IF FLAG:控え利用設定 == 0
	PRINTFORML [対象変更]
ELSEIF FLAG:控え利用設定 == 1
	PRINTFORML [調教開始]
ELSE
	PRINTFORML [利用しない]
ENDIF
PRINTFORML %"[22] - コマンドを並べる数の設定", 50, LEFT%
PRINTFORML %"[23] - オープニングデモ", 50, LEFT%[\@ GLOBAL:4 ? 見ない # 見る \@]
PRINTFORML %"[24] - 右クリック時のバーアニメ ", 50, LEFT%[\@ FLAG:バーアニメスキップ ? スキップ # 加速 \@]
PRINTFORML %"[25] - メッセージウィンドウ設定 ", 50, LEFT%
;PRINTFORM %"[26] - 悪魔合体のキャラ表示数設定 ", 50, LEFT%
;;導入直後用の処理
;SIF FLAG:悪魔合体リスト表示数設定 == 0
;	FLAG:悪魔合体リスト表示数設定 = 20
;PRINTFORML [現在の表示数:{FLAG:悪魔合体リスト表示数設定}]
;PRINTFORML %"[28] - 合体用ソフトクイック設定 ", 50, LEFT%
PRINTFORML %"[26] - リスト表示数設定", 50, LEFT%[現在の表示数:{リスト表示数()}]
PRINTFORML %"[27] - 合体用ソフトクイック設定", 50, LEFT%
PRINTFORML %"[28] - ステータス画面タイプ ", 50, LEFT%
PRINTFORML %"[29] - 野良悪魔素質ランダム設定 ", 50, LEFT%
PRINTFORML %"[30] - 戦闘時命乞いイベント", 50, LEFT%[\@ FLAG:戦闘時命乞いイベント ? あり  # なし \@]
SIF FLAG:ムフフ展開
	PRINTFORML %"[31] - 押し倒されイベント", 50, LEFT%[\@ GETBIT(FLAG:押し倒されイベント,0) ? あり  # なし \@]


PRINTFORM %"[32] - レベルアップ時インターフェース", 50, LEFT%
SELECTCASE FLAG:レベルアップ時インターフェース設定
	CASE 0
		PRINTL [デフォルトI/F]
	CASE 1
		PRINTL [新型I/F]
	CASE 2
		PRINTL [自動I/F]
ENDSELECT
PRINTFORML %"[33] - 仲魔のTALK設定", 50, LEFT%[\@ FLAG:仲魔会話のお任せ設定 ? 仲魔に任せる  # 自分で指示する \@]
PRINTFORML %"[34] - ダンジョンの推奨レベル表示", 50, LEFT%[\@ FLAG:ダンジョンの推奨レベル表示設定 ? 見る  # 見ない \@]
PRINTFORML %"[35] - 外見・スリーサイズ機能", 50, LEFT%[\@ SETTING_IS_3SIZE() ? 利用する  # 利用しない \@]
PRINTFORML %"[36] - 能力確認で最後に開いた表示情報", 50, LEFT%[\@ FLAG:表示情報ページ保存 ? 保存する  # 保存しない \@]
PRINTFORM %"[37] - 男の娘ＢＬ設定", 50, LEFT%[
SELECTCASE FLAG:男の娘ＢＬ設定
	CASE 0
		PRINT 男の娘はＢＬ扱いしない
	CASE 1
		PRINT 男の娘でもＢＬ
	CASE 2
		PRINT 男の娘同士のときだけＢＬ扱いしない
ENDSELECT
PRINTL ]

PRINTFORML %"[99] - 帳簿の消去 ", 50, LEFT%

IF FLAG:DEBUG
	PRINTFORM %"[500] - 戦闘時ボイコット設定", 50, LEFT%
	SELECTCASE FLAG:戦闘時ボイコット設定
		CASE 0
			PRINTL [なし]
		CASE 1
			PRINTL [FLAVOR]
		CASE 2
			PRINTL [NOMAL]
	ENDSELECT

	PRINTFORML %"[501] - EXTRAイベント設定", 50, LEFT%[\@ GETBIT(FLAG:EXTRAイベント設定, 0) ? あり  # なし \@]

	PRINTFORM %"[502] - 戦闘時の人間のステータス計算方式", 50, LEFT%
	SELECTCASE FLAG:人間戦闘ステ設定
		CASE 0
			PRINTL [通常(バニラ設定)]
		CASE 1
			PRINTL [命中率改善]
		CASE 2
			PRINTL [全体的に底上げ]
		CASE 3
			PRINTL [装備品の補正を（LV/2）％の強化]
	ENDSELECT
	PRINTFORM %"[503] - 戦闘時の素質影響設定", 50, LEFT%
	SELECTCASE BATTLE_SETTING_IS_TALENT()
		CASE 0
			PRINTL [通常(バニラ設定)]
		CASE 1
			PRINTL [素質影響]
	ENDSELECT
	PRINTFORM %"[504] - 戦闘時のバステ必中設定", 50, LEFT%
	SELECTCASE BATTLE_SETTING_IS_BAD_STATUS()
		CASE 0
			PRINTL [通常(バニラ設定)]
		CASE 1
			PRINTL [バステ必中]
	ENDSELECT
	PRINTFORM %"[505] - 戦闘時の1more動作設定", 50, LEFT%
	SELECTCASE BATTLE_SETTING_IS_1MORE()
		CASE 0
			PRINTL [通常(バニラ設定]
		CASE 1
			PRINTL [変更]
	ENDSELECT
	PRINTFORM %"[506] - 装備耐性・効果変更設定", 50, LEFT%
	SELECTCASE BATTLE_SETTING_IS_EQUIP_EFFECT()
		CASE 0
			PRINTL [変更しない(バニラ設定)]
		CASE 1
			PRINTL [変更する]
	ENDSELECT
	PRINTFORML %"[507] - 魔貨レート変動機能", 50, LEFT%[\@ SETTING_IS_MAKKA_RATE() ? 利用する  # 利用しない \@]
	PRINTFORML %"[508] - ソシャゲ風ガチャ", 50, LEFT%
	SELECTCASE FLAG:悪魔ガチャモード
		CASE 0
			PRINTL [なし]
		CASE 1
			PRINTL [ガチャ起動]
		CASE 2
			PRINTL [ガチャ悪魔オンリー]
	ENDSELECT
	PRINTFORML %"[509] - デビルシフターステ設定", 50, LEFT%
	SELECTCASE FLAG:デビルシフターステ設定
		CASE 0
			PRINTL [変更しない(バニラ設定)]
		CASE 1
			PRINTL [変更する]
	ENDSELECT
	PRINTFORML %"[510] - 装備効果設定", 50, LEFT%
	SELECTCASE BATTLE_SETTING_IS_EQUIPTHEORY()
		CASE 0
			PRINTL [変更しない]
		CASE 1
			PRINTL [変更する]
	ENDSELECT
ENDIF
[IF_DEBUG]
	PRINTFORM %"[500] - 戦闘時ボイコット設定", 50, LEFT%
	SELECTCASE FLAG:戦闘時ボイコット設定
		CASE 0
			PRINTL [なし]
		CASE 1
			PRINTL [FLAVOR]
		CASE 2
			PRINTL [EASY]
		CASE 3
			PRINTL [NORMAL]
		CASE 4
			PRINTL [HARD]
	ENDSELECT

	PRINTFORML %"[501] - EXTRAイベント設定", 50, LEFT%[\@ GETBIT(FLAG:EXTRAイベント設定, 0) ? あり  # なし \@]

	PRINTFORM %"[502] - 戦闘時の人間のステータス計算方式", 50, LEFT%
	SELECTCASE FLAG:人間戦闘ステ設定
		CASE 0
			PRINTL [通常(バニラ設定)]
		CASE 1
			PRINTL [命中率改善]
		CASE 2
			PRINTL [全体的に底上げ]
		CASE 3
			PRINTL [装備品の補正を（LV/2）％の強化]
	ENDSELECT
	PRINTFORM %"[503] - 戦闘時の素質影響設定", 50, LEFT%
	SELECTCASE BATTLE_SETTING_IS_TALENT()
		CASE 0
			PRINTL [通常(バニラ設定)]
		CASE 1
			PRINTL [素質影響]
	ENDSELECT
	PRINTFORM %"[504] - 戦闘時のバステ必中設定", 50, LEFT%
	SELECTCASE BATTLE_SETTING_IS_BAD_STATUS()
		CASE 0
			PRINTL [通常(バニラ設定)]
		CASE 1
			PRINTL [バステ必中]
	ENDSELECT
	PRINTFORM %"[505] - 戦闘時の1more動作設定", 50, LEFT%
	SELECTCASE BATTLE_SETTING_IS_1MORE()
		CASE 0
			PRINTL [通常(バニラ設定)]
		CASE 1
			PRINTL [変更]
	ENDSELECT
	PRINTFORM %"[506] - 装備耐性・効果変更設定", 50, LEFT%
	SELECTCASE BATTLE_SETTING_IS_EQUIP_EFFECT()
		CASE 0
			PRINTL [変更しない(バニラ設定)]
		CASE 1
			PRINTL [変更する]
	ENDSELECT
	PRINTFORML %"[507] - 魔貨レート変動機能", 50, LEFT%[\@ SETTING_IS_MAKKA_RATE() ? 利用する  # 利用しない \@]
	PRINTFORML %"[508] - ソシャゲ風ガチャ", 50, LEFT%
	SELECTCASE FLAG:悪魔ガチャモード
		CASE 0
			PRINTL [なし]
		CASE 1
			PRINTL [ガチャ起動]
		CASE 2
			PRINTL [ガチャ悪魔オンリー]
	ENDSELECT
	PRINTFORML %"[509] - デビルシフターステ設定", 50, LEFT%
	SELECTCASE FLAG:デビルシフターステ設定
		CASE 0
			PRINTL [変更しない(バニラ設定)]
		CASE 1
			PRINTL [変更する]
	ENDSELECT
	PRINTFORML %"[510] - 装備効果設定", 50, LEFT%
	SELECTCASE BATTLE_SETTING_IS_EQUIPTHEORY()
		CASE 0
			PRINTL [変更しない]
		CASE 1
			PRINTL [変更する]
	ENDSELECT
[ENDIF]

PRINTL [100]-戻る


$INPUT_LOOP
INPUT
IF RESULT == 0
	CALL TEXT_SETTING
ELSEIF RESULT == 1
	CALL SAMENPLACE_SETTING
ELSEIF RESULT == 2
	CALL CLOTHES_SETTING
ELSEIF RESULT == 3
	PRINTFORM 現在の妊娠機能の設定は [
	SELECTCASE FLAG:妊娠機能
		CASE 0
			PRINT OFF
			;全キャラの妊娠判定用のフラグ値をクリア
			CALL CLEAR_PREGNANCY_DATERMINATION
		CASE 1
			PRINT ON
		CASE 2
			PRINT 男の娘を除いてON
			;男の娘の妊娠判定用のフラグ値をクリア
			CALL CLEAR_PREGNANCY_DATERMINATION, -2
	ENDSELECT
	PRINTFORML ] です。
	PRINTL
	PRINTFORML 妊娠機能の設定を選択してください
	PRINTL [0] OFF
	PRINTL [1] ON
	PRINTL [2] 男の娘を除いてON
	CALL INPUTINT,0,1,2
	FLAG:妊娠機能 = RESULT
	PRINTFORM 妊娠機能の設定を [
	SELECTCASE FLAG:妊娠機能
		CASE 0
			PRINT OFF
		CASE 1
			PRINT ON
		CASE 2
			PRINT 男の娘を除いてON
	ENDSELECT
	PRINTFORMW ] に変更しました。
	;FOR LCOUNT, 0, CHARANUM
	;	CFLAG:LCOUNT:主人の中出氏による妊娠判定 = 0
	;	CFLAG:LCOUNT:助手の中出氏による妊娠判定 = 0
	;	CFLAG:LCOUNT:奴隷の中出氏による妊娠判定 = 0
	;	CFLAG:LCOUNT:顧客の中出氏による妊娠判定 = 0
	;	CFLAG:LCOUNT:触手の中出氏による妊娠判定 = 0
	;NEXT
	RESTART
ELSEIF RESULT == 4
	CALL TYPE_COLOR_SETTING
ELSEIF RESULT == 5
	PRINTFORML ムフフ展開を\@ FLAG:ムフフ展開 ? なし # あり \@にしました
	INVERTBIT  FLAG:ムフフ展開, 0
	SIF FLAG:ムフフ展開 == 1
		PRINT 探索中にムフフな展開が起きるようになるかもしれません
	WAIT
	RESTART
ELSEIF RESULT == 6
	PRINTFORMW 出産機能を\@ FLAG:出産機能ONOFF ? 無効 # 有効 \@にしました
	IF FLAG:出産機能ONOFF == 0
		FLAG:出産機能ONOFF = 1
		IF ASSI > 0
			SIF ((TALENT:ASSI:153 && CFLAG:ASSI:110 - 2 <= DAY) || TALENT:ASSI:154)
				ASSI = -1
		ENDIF
		IF TARGET > 0
			SIF ((TALENT:TARGET:153 && CFLAG:TARGET:110 - 2 <= DAY) || TALENT:TARGET:154)
				TARGET = -1
		ENDIF
	ELSE
		FLAG:出産機能ONOFF = 0
	ENDIF
	RESTART
ELSEIF RESULT == 7
	PRINTFORMW ＳＭ拡張機能を\@ FLAG:44 ? なし # あり \@にしました
	INVERTBIT FLAG:SM機能拡張, 0
	RESTART
ELSEIF RESULT == 8
	CALL AUTO_RECOVER_SETTING
ELSEIF RESULT == 9
	PRINTFORMW 野外プレイ拡張機能を\@ FLAG:46 ? なし # あり \@にしました
	INVERTBIT FLAG:野外露出強化, 0
	RESTART
ELSEIF RESULT == 10
	PRINTFORMW 触手拡張機能を\@ FLAG:47 ? なし # あり \@にしました
	INVERTBIT FLAG:触手紳士覚醒, 0
ELSEIF RESULT == 11
	INVERTBIT FLAG:主人以外TALK可能 , 0
	IF FLAG:主人以外TALK可能
		PRINTFORMW 主人、もしくは陥落したキャラであれば敵悪魔とTALKできるようになりました
	ELSE
		PRINTFORMW 主人でなければ敵悪魔とTALKできなくなりました
	ENDIF
ELSEIF RESULT == 12
	PRINTFORML 未調教時陥落機能を設定してください
	PRINTL [0] OFF
	PRINTL [1] 調教を開始すると戦闘に参加させられなくなる人間にのみ有効にする
	PRINTL [2] 人間・悪魔を問わず有効にする
	CALL INPUTINT, 0, 1, 2
	IF RESULT == 0
		PRINTW 未調教時陥落機能を【なし】に設定しました
		FLAG:未調教時陥落 = 0
	ELSEIF RESULT == 1
		PRINTW 未調教時陥落機能を【一部の人間のみ有効】に設定しました
		FLAG:未調教時陥落 = 1
	ELSEIF RESULT == 2
		PRINTW 未調教時陥落機能を【全体に有効】に設定しました
		FLAG:未調教時陥落 = 2
	ENDIF
ELSEIF RESULT == 13
	CALL DUNGEON_COMMAND_CONFIG
ELSEIF RESULT == 14
	CALL INPUT_YN_CONFIG
ELSEIF RESULT == 15
	PRINTFORMW スキル属性表示設定を\@ FLAG:スキル属性表示設定 ? デフォルト # 追加表示 \@にしました
	INVERTBIT FLAG:スキル属性表示設定, 0
	RESTART
;---- EDIT 労役実行確認省略オプション追加(2011/02/04) ADD START ---------
ELSEIF RESULT == 16
	CALL WORK_CONFIRM_SKIP_CONFIG
;---- EDIT 労役実行確認省略オプション追加(2011/02/04) ADD END -----------
;---- EDIT 夜這い不許可性別設定オプション追加(2011/03/10) ADD START ---------
ELSEIF RESULT == 17
	CALL CONTROL_SELF_CONFIG
;---- EDIT 夜這い不許可性別設定オプション追加(2011/03/10) ADD END -----------
;---- EDIT ＮＴＲ機能整理(2011/09/08) ADD START ---------
ELSEIF RESULT == 18
	CALL NTR_CONFIG
;---- EDIT ＮＴＲ機能整理(2011/09/08) ADD END -----------
ELSEIF RESULT == 19
	FLAG:休憩確認フラグ += 1
	SIF FLAG:休憩確認フラグ > 2
		FLAG:休憩確認フラグ = 0
	SELECTCASE FLAG:休憩確認フラグ
		CASE 0
			PRINTFORML [休憩]コマンド選択時に確認をするようにしました。
			PRINTFORMW [朝まで休憩]コマンドを[休憩]に変更しました。
		CASE 1
			PRINTFORMW [休憩]コマンド選択時に確認をしないようにしました。
		CASE 2
			PRINTFORML [休憩]コマンドを[朝まで休憩]に変更しました。
			PRINTFORMW このコマンドを選択すると自動的に次の朝の日まで休憩します。
	ENDSELECT
ELSEIF RESULT == 20
	DRAWLINE
	PRINT 現在の表示設定は
	SELECTCASE FLAG:PALAM表示設定
		CASE 0
			PRINT Ａタイプ
		CASE 1
			PRINT Ｂタイプ
		CASE 2
			PRINT Ｃタイプ
	ENDSELECT
	PRINTL となっています
	DRAWLINE
	PRINTL [0] Ａタイプ
	PRINTL PALAM ：獲得した累計を表示
	PRINTL ゲージ：現在のレベルになってから獲得した量を基準として用いる
	PRINTL 説明　：従来のものにもっとも近いですが、バーは正比例しないので
	PRINTL 　　　　大体はわかるものの、見た目と量が一致しておらず、飾りに近くなります
	PRINTL [1] Ｂタイプ
	PRINTL PALAM ：獲得した累計を表示
	PRINTL ゲージ：獲得した累計を基準として用いる
	PRINTL 説明　：従来のものに近く、バーが正比例し、見た目から次のレベルの必要量が把握しやすいです
	PRINTL 　　　　ただし、レベルがあがった瞬間からバーが半分以上伸びてたりする場合があるので
	PRINTL 　　　　その点が気になってしまうかもしれません
	PRINTL [2] Ｃタイプ
	PRINTL PALAM ：現在のレベルになってから獲得した量を表示
	PRINTL ゲージ：現在のレベルになってから獲得した量を基準として用いる
	PRINTL 説明　：Ｂタイプ同様、バーが正比例し、見た目から見た目から次のレベルの必要量が把握しやすく、
	PRINTL 　　　　レベルアップ毎にちゃんとバーが初期化されます
	PRINTL 　　　　しかし、閾値の見た目が大きく変化するため、従来のものとかなりプレイ感覚が変わってしまいます
	CALL INPUTINT( 0, 1, 2)
	IF FLAG:PALAM表示設定 == RESULT
		PRINTW 表示設定を変更しませんでした
	ELSE
		FLAG:PALAM表示設定 = RESULT
		PRINT 表示設定を
		SELECTCASE FLAG:PALAM表示設定
			CASE 0
				PRINT Ａタイプ
			CASE 1
				PRINT Ｂタイプ
			CASE 2
				PRINT Ｃタイプ
		ENDSELECT
		PRINTW に変更しました
	ENDIF
ELSEIF RESULT == 21
	PRINTL [0] 対象変更　:調教を選んだ場合、対象を変更するのみ
	PRINTL [1] 調教開始　:調教を選んだ場合、対象を変更後、調教を開始する
	PRINTL [2] 利用しない:SHOP画面に控えを表示しません
	CALL INPUTINT(0,1,2)
	FLAG:控え利用設定 = RESULT
	PRINTFORMW 控えの利用設定を変更しました。
ELSEIF RESULT == 22
	CALL PRINTCPERLINE_SETTING
ELSEIF RESULT == 23
	INVERTBIT GLOBAL:4 , 0
	SAVEGLOBAL
	;PRINTFORML [24] - オープニングデモ [\@ GLOBAL:オープニングデモ飛ばし ? 見ない # 見る \@]
ELSEIF RESULT == 24
	INVERTBIT FLAG:バーアニメスキップ , 0
ELSEIF RESULT == 25
	CALL MESSAGE_WINDOW_CONFIG
;ELSEIF RESULT == 26
;	PRINTL 悪魔合体時の表示キャラ数を設定します　（デフォルトは２０）
;	$悪魔合体リスト表示数変更
;	INPUT
;	FLAG:悪魔合体リスト表示数設定 = RESULT
;	IF FLAG:悪魔合体リスト表示数設定 < 1
;		PRINTW 最低でも１以上の数値を入力してください
;		CLEARLINE 2
;		GOTO 悪魔合体リスト表示数変更
;	ELSE
;		PRINTFORMW 表示数を{FLAG:悪魔合体リスト表示数設定}に変更しました
;	ENDIF
;ELSEIF RESULT == 28
;	CALL 合体用ソフトクイック設定_OPTION
ELSEIF RESULT == 26
	PRINTL 一度にリスト表示する項目数を入力してください。入力可能な範囲は10〜50です　(初期値は20)
	PRINTL [ 0] 変更しない　[20] 初期値にする
	PRINTL [10]　[15]　[20]　[25]　[30]　[35]　[40]　[45]　[50]
	DO
		INPUT
		IF RESULT && !INRANGE(RESULT, 10, 50)
			CLEARLINE 1
			REUSELASTLINE 入力値が範囲外です。入力可能な範囲は10〜50です
		ENDIF
	LOOP RESULT && !INRANGE(RESULT, 10, 50)
	RESULT = RESULT ? RESULT # FLAG:リスト表示数設定
	IF FLAG:リスト表示数設定 == RESULT || (!FLAG:リスト表示数設定 && RESULT == 20)
		PRINTFORMW 一度にリスト表示する項目数は{RESULT ? RESULT # 20}のままです
	ELSE
		FLAG:リスト表示数設定 = RESULT
		PRINTFORMW 一度にリスト表示する項目数を{FLAG:リスト表示数設定}に変更しました
	ENDIF
ELSEIF RESULT == 27
	CALL 合体用ソフトクイック設定
ELSEIF RESULT == 28
	CALL SHOW_STATUS_CONFIG
ELSEIF RESULT == 29
	PRINTL 出現悪魔に素質をランダム設定するようになります
	PRINTL 設定する項目を選んでください
	PRINTFORML [0] 配偶者ランダム付与　　　　　　　　　　　[現在の設定確率：{FLAG:配偶者ランダム付与}％]
	PRINTFORML [1] 野良悪魔素質ランダム設定（現在は胸のみ）[現在の設定確率：{FLAG:野良悪魔素質ランダム設定}％]
	CALL INPUTINT(0,1)
	SELECTCASE RESULT
		CASE 0
			PRINTL 配偶者未設定の悪魔に配偶者を設定します
			PRINTL 設定する確率を入力して下さい　（最大値は１００）
			$配偶者ランダム付与_LOOP
			INPUT
			FLAG:配偶者ランダム付与 = RESULT
			IF FLAG:配偶者ランダム付与 == 0
				PRINTW 設定をオフにしました
			ELSEIF FLAG:配偶者ランダム付与 < 0 || FLAG:配偶者ランダム付与 > 100
				PRINTL 範囲外の数値が入力されました
				PRINTW 再入力してください
				CLEARLINE 3
				GOTO 配偶者ランダム付与_LOOP
			ELSE
				PRINTFORMW {FLAG:配偶者ランダム付与}％に変更しました
			ENDIF
		CASE 1
			PRINTL 出現悪魔の素質をランダムで設定します（現在は胸のみ）
			PRINTL 設定する確率を入力して下さい　（最大値は１００）
			$野良悪魔素質ランダム設定_LOOP
			INPUT
			FLAG:野良悪魔素質ランダム設定 = RESULT
			IF FLAG:野良悪魔素質ランダム設定 == 0
				PRINTW 設定をオフにしました
			ELSEIF FLAG:野良悪魔素質ランダム設定 < 0 || FLAG:野良悪魔素質ランダム設定 > 100
				PRINTL 範囲外の数値が入力されました
				PRINTW 再入力してください
				CLEARLINE 3
				GOTO 野良悪魔素質ランダム設定_LOOP
			ELSE
				PRINTFORMW {FLAG:野良悪魔素質ランダム設定}％に変更しました
			ENDIF
	ENDSELECT
ELSEIF RESULT == 30
	;PRINTFORML 戦闘時の命乞いイベントの発生を\@ FLAG:戦闘時命乞いイベント ? なし # あり \@にしました
	;INVERTBIT FLAG:戦闘時命乞いイベント, 0
	;RESTART
	PRINTL 戦闘時の命乞いイベント発生について設定します
	PRINTL 設定する項目を選んでください
	PRINTFORML [0] 命乞いイベント　　　　　　[現在の発生設定：\@ GETBIT(FLAG:戦闘時命乞いイベント,0) ? あり  # なし \@]
	IF GETBIT(FLAG:戦闘時命乞いイベント,0)
		PRINTFORML [1] イベント発生率　　　　　　[現在の設定確率：{FLAG:戦闘時命乞いイベント発生率}％]
		CALL INPUTINT(0,1)
	ELSE
		CALL INPUTINT(0)
	ENDIF

	SELECTCASE RESULT
		CASE 0
			INVERTBIT FLAG:戦闘時命乞いイベント, 0
			PRINTFORMW 戦闘時の命乞いイベントの発生を\@ GETBIT(FLAG:戦闘時命乞いイベント,0) ? あり # なし \@に変更しました
			SIF FLAG:戦闘時命乞いイベント発生率 < 1 || FLAG:戦闘時命乞いイベント発生率 > 10
				FLAG:戦闘時命乞いイベント発生率 = 5
			RESTART
		CASE 1
			PRINTL 命乞いイベントの発生率を設定します
			PRINTL 設定する確率を入力して下さい　（1％〜10％）
			$命乞いイベント発生率_LOOP
			INPUT
			IF RESULT < 1 || RESULT > 10
				PRINTL 範囲外の数値が入力されました
				PRINTW 再入力してください
				CLEARLINE 3
				GOTO 命乞いイベント発生率_LOOP
			ELSE
				FLAG:戦闘時命乞いイベント発生率 = RESULT
				PRINTFORMW イベント発生率を{FLAG:戦闘時命乞いイベント発生率}％に変更しました
				RESTART
			ENDIF
	ENDSELECT

ELSEIF RESULT == 31
	PRINTL ダンジョン探索時に発情した場合に、あなたが押し倒されるイベントについて設定します
	PRINTL 設定する項目を選んでください
	PRINTFORML [0] 押し倒されイベント　　　　　　[現在の発生設定：\@ GETBIT(FLAG:押し倒されイベント,0) ? あり  # なし \@]
	IF GETBIT(FLAG:押し倒されイベント,0)
		PRINTFORML [1] イベント発生率　　　　　　　　[現在の設定確率：{FLAG:押し倒されイベント発生率}％]
		PRINTFORML [2] イベント詳細設定
		CALL INPUTINT(0,1,2)
	ELSE
		CALL INPUTINT(0)
	ENDIF

	SELECTCASE RESULT
		CASE 0
			INVERTBIT FLAG:押し倒されイベント, 0
			PRINTFORMW 押し倒されイベントの発生を\@ GETBIT(FLAG:押し倒されイベント,0) ? あり # なし \@に変更しました
			SIF GETBIT(FLAG:押し倒されイベント,0)
				PRINTFORMW イベントの発生する組み合わせについては別途詳細設定を行ってください
			SIF FLAG:押し倒されイベント発生率 < 1 || FLAG:押し倒されイベント発生率 > 10
				FLAG:押し倒されイベント発生率 = 7
			IF FLAG:押し倒されイベント < 2
				INVERTBIT FLAG:押し倒されイベント, 1
				INVERTBIT FLAG:押し倒されイベント, 5
				INVERTBIT FLAG:押し倒されイベント, 9
				INVERTBIT FLAG:押し倒されイベント, 13
			ENDIF
			RESTART
		CASE 1
			PRINTL 押し倒されイベントの発生率を設定します
			PRINTL 設定する確率を入力して下さい　（1％〜10％）
			$押し倒されイベント発生率_LOOP
			INPUT
			IF RESULT < 1 || RESULT > 10
				PRINTL 範囲外の数値が入力されました
				PRINTW 再入力してください
				CLEARLINE 3
				GOTO 押し倒されイベント発生率_LOOP
			ELSE
				FLAG:押し倒されイベント発生率 = RESULT
				PRINTFORMW イベント発生率を{FLAG:押し倒されイベント発生率}％に変更しました
				RESTART
			ENDIF
		CASE 2
			$押し倒されイベント組合設定開始_LOOP
			PRINTL 押し倒されイベントが発生する性別の組み合わせを設定します
			PRINTL 　※対象→あなた 男娘:男の娘　双女:ふたなり
			PRINTFORM [ 1]  女 → 男  :\@ GETBIT(FLAG:押し倒されイベント,1) ? ○ # × \@ 
			PRINTFORM [ 2] 双女→ 男  :\@ GETBIT(FLAG:押し倒されイベント,2) ? ○ # × \@ 
			PRINTFORM [ 3]  男 → 男  :\@ GETBIT(FLAG:押し倒されイベント,3) ? ○ # × \@ 
			PRINTFORML [ 4] 男娘→ 男  :\@ GETBIT(FLAG:押し倒されイベント,4) ? ○ # × \@ 
			PRINTFORM [ 5]  女 → 女  :\@ GETBIT(FLAG:押し倒されイベント,5) ? ○ # × \@ 
			PRINTFORM [ 6] 双女→ 女  :\@ GETBIT(FLAG:押し倒されイベント,6) ? ○ # × \@ 
			PRINTFORM [ 7]  男 → 女  :\@ GETBIT(FLAG:押し倒されイベント,7) ? ○ # × \@ 
			PRINTFORML [ 8] 男娘→ 女  :\@ GETBIT(FLAG:押し倒されイベント,8) ? ○ # × \@  
			PRINTFORM [ 9]  女 →男娘 :\@ GETBIT(FLAG:押し倒されイベント,9) ? ○ # × \@ 
			PRINTFORM [10] 双女→男娘 :\@ GETBIT(FLAG:押し倒されイベント,10) ? ○ # × \@ 
			PRINTFORM [11]  男 →男娘 :\@ GETBIT(FLAG:押し倒されイベント,11) ? ○ # × \@ 
			PRINTFORML [12] 男娘→男娘 :\@ GETBIT(FLAG:押し倒されイベント,12) ? ○ # × \@  
			PRINTFORM [13]  女 →双女 :\@ GETBIT(FLAG:押し倒されイベント,13) ? ○ # × \@ 
			PRINTFORM [14] 双女→双女 :\@ GETBIT(FLAG:押し倒されイベント,14) ? ○ # × \@ 
			PRINTFORM [15]  男 →双女 :\@ GETBIT(FLAG:押し倒されイベント,15) ? ○ # × \@ 
			PRINTFORML [16] 男娘→双女 :\@ GETBIT(FLAG:押し倒されイベント,16) ? ○ # × \@  
			PRINT [100] すべてあり  
			PRINT [200] すべてなし  
			PRINTL [999] オプションに戻る
			$押し倒されイベント組合設定入力_LOOP
			INPUT
			IF RESULT == 100
				SETBIT FLAG:押し倒されイベント,1
				SETBIT FLAG:押し倒されイベント,2
				SETBIT FLAG:押し倒されイベント,3
				SETBIT FLAG:押し倒されイベント,4
				SETBIT FLAG:押し倒されイベント,5
				SETBIT FLAG:押し倒されイベント,6
				SETBIT FLAG:押し倒されイベント,7
				SETBIT FLAG:押し倒されイベント,8
				SETBIT FLAG:押し倒されイベント,9
				SETBIT FLAG:押し倒されイベント,10
				SETBIT FLAG:押し倒されイベント,11
				SETBIT FLAG:押し倒されイベント,12
				SETBIT FLAG:押し倒されイベント,13
				SETBIT FLAG:押し倒されイベント,14
				SETBIT FLAG:押し倒されイベント,15
				SETBIT FLAG:押し倒されイベント,16
				SETBIT FLAG:押し倒されイベント,17
				CLEARLINE 8
				GOTO 押し倒されイベント組合設定開始_LOOP
			ELSEIF RESULT == 200
				CLEARBIT FLAG:押し倒されイベント,1
				CLEARBIT FLAG:押し倒されイベント,2
				CLEARBIT FLAG:押し倒されイベント,3
				CLEARBIT FLAG:押し倒されイベント,4
				CLEARBIT FLAG:押し倒されイベント,5
				CLEARBIT FLAG:押し倒されイベント,6
				CLEARBIT FLAG:押し倒されイベント,7
				CLEARBIT FLAG:押し倒されイベント,8
				CLEARBIT FLAG:押し倒されイベント,9
				CLEARBIT FLAG:押し倒されイベント,10
				CLEARBIT FLAG:押し倒されイベント,11
				CLEARBIT FLAG:押し倒されイベント,12
				CLEARBIT FLAG:押し倒されイベント,13
				CLEARBIT FLAG:押し倒されイベント,14
				CLEARBIT FLAG:押し倒されイベント,15
				CLEARBIT FLAG:押し倒されイベント,16
				SETBIT FLAG:押し倒されイベント,17
				CLEARLINE 8
				GOTO 押し倒されイベント組合設定開始_LOOP
			ELSEIF RESULT == 999
				RESTART
			ELSEIF RESULT < 1 || RESULT > 16
				CLEARLINE 1
				GOTO 押し倒されイベント組合設定入力_LOOP
			ELSE
				SETBIT FLAG:押し倒されイベント,17
				INVERTBIT FLAG:押し倒されイベント, RESULT
				CLEARLINE 8
				GOTO 押し倒されイベント組合設定開始_LOOP
			ENDIF
	ENDSELECT

ELSEIF RESULT == 32
	DRAWLINE
	PRINT 現在の表示設定は
	SELECTCASE FLAG:レベルアップ時インターフェース設定
		CASE 0
			PRINT デフォルトI/F
		CASE 1
			PRINT 新型I/F
		CASE 2
			PRINT 自動I/F
	ENDSELECT
	PRINTL となっています
	DRAWLINE
	PRINTL [0] デフォルトI/F
	PRINTL 説明　：特定のステータスを伸ばすのに便利です
	PRINTL 　　　　上昇させるステータスと上昇値を選択します
	PRINTL [1] 新型I/F
	PRINTL 説明　：毎回、細かいステータス調整に便利です
	PRINTL 　　　　FSPタイプの操作でステータスと上昇値を操作します。
	PRINTL [2] 自動I/F
	PRINTL 説明　：ランダムにステータスを割り振ります
	PRINTL 　　　　男の場合は力が、女の場合は魔力が上昇しやすいです
	CALL INPUTINT( 0, 1, 2)
	IF FLAG:レベルアップ時インターフェース設定 == RESULT
		PRINTW 表示設定を変更しませんでした
	ELSE
		FLAG:レベルアップ時インターフェース設定 = RESULT
		PRINT 表示設定を
		SELECTCASE FLAG:レベルアップ時インターフェース設定
			CASE 0
				PRINT デフォルトI/F
			CASE 1
				PRINT 新型I/F
			CASE 2
				PRINT 自動I/F
		ENDSELECT
		PRINTW に変更しました
	ENDIF
	RESTART

ELSEIF RESULT == 33
	PRINTFORMW 仲魔の会話を『\@ FLAG:仲魔会話のお任せ設定 ? 自分で指示する # 任せる \@』に変更しました
	INVERTBIT FLAG:仲魔会話のお任せ設定, 0
	RESTART
	
ELSEIF RESULT == 34
	PRINTFORMW ダンジョンの推奨レベルを『\@ FLAG:ダンジョンの推奨レベル表示設定 ? 見ない # 見る \@』に変更しました
	INVERTBIT FLAG:ダンジョンの推奨レベル表示設定, 0
	RESTART

ELSEIF RESULT == 35
	CALL SETTING_INVERT_3SIZE
	PRINTFORMW 外見・スリーサイズ機能を『\@ SETTING_IS_3SIZE() ? 利用する # 利用しない \@』に変更しました
	RESTART

ELSEIF RESULT == 36
	PRINT 能力確認の表示情報を
	SELECTCASE (FLAG:表示情報ページ保存 % 10)
		CASE 0
			PRINTL [保存する]
		CASE 1
			PRINTL [保存しない]
	ENDSELECT
	PRINTW ように変更しました
	IF (FLAG:表示情報ページ保存)
		FLAG:表示情報ページ保存 = 0
	ELSE
		FLAG:表示情報ページ保存 = 101
	ENDIF
	RESTART

ELSEIF RESULT == 37
	PRINTFORM 現在の設定は [
	SELECTCASE FLAG:男の娘ＢＬ設定
		CASE 0
			PRINT 男の娘絡みではＢＬ経験が入らない
		CASE 1
			PRINT 男の娘絡みでもＢＬ経験が入る
		CASE 2
			PRINT 男の娘同士のときだけＢＬ経験が入らない
	ENDSELECT
	PRINTFORML ] です。
	PRINTL
	PRINTFORML 設定を選択してください
	PRINTL [0] 男の娘絡みではＢＬ経験が入らない
	PRINTL [1] 男の娘絡みでもＢＬ経験が入る
	PRINTL [2] 男の娘同士のときだけＢＬ経験が入らない
	CALL INPUTINT,0,1,2
	FLAG:男の娘ＢＬ設定 = RESULT
	PRINTFORM 設定を [
	SELECTCASE FLAG:男の娘ＢＬ設定
		CASE 0
			PRINT 男の娘絡みではＢＬ経験が入らない
		CASE 1
			PRINT 男の娘絡みでもＢＬ経験が入る
		CASE 2
			PRINT 男の娘同士のときだけＢＬ経験が入らない
	ENDSELECT
	PRINTFORMW ] に変更しました。
	RESTART

ELSEIF RESULT == 99
	PRINTL 悪魔調教典.exe内の帳簿を消去します
	PRINTL 消去しますか？
	PRINTL [0] 消去する
	PRINTL [1] やめる
	CALL INPUTINT(0,1,)
	SELECTCASE RESULT
		CASE 0
			PRINTL 
			PRINTL 消去すると元に戻す事は出来ません
			PRINTL 本当に消去しますか？
			PRINTL [0] 本当に消去する
			PRINTL [1] やめる
			CALL INPUTINT(0,1,)
			SELECTCASE RESULT
				CASE 0
					VARSET FLAG, 0, 1400, 1471
					PRINTW 帳簿を消去しました
				CASE 1
					PRINTW キャンセルしました
			ENDSELECT
		CASE 1
			PRINTW キャンセルしました
	ENDSELECT
ELSEIF RESULT == 100
	RETURN 0

ELSEIF RESULT == 500
	DRAWLINE
	PRINT 現在の設定は
	SELECTCASE FLAG:戦闘時ボイコット設定
		CASE 0
			PRINT  なし 
		CASE 1
			PRINT  FLAVOR 
		CASE 2
			PRINT  EASY 
		CASE 3
			PRINT  NORMAL 
		CASE 4
			PRINT  HARD 
	ENDSELECT
	PRINTL となっています
	DRAWLINE
	PRINTL [0] なし
	PRINTL 説明　：戦闘中の一切のボイコットイベントが発生しなくなります。
	PRINTL 　　　　動作としてはバニラと同様になります。
	PRINTL [1] FLAVOR
	PRINTL 説明　：戦闘中にボイコット風味のイベントが発生します。
	PRINTL 　　　　セリフイベントのみで行動キャンセル等他のボイコットイベントは発生しません。
	PRINTL [2] EASY
	PRINTL 説明　：戦闘中に低難易度のボイコットイベントが発生します。
	PRINTL 　　　　セリフと共に気力増減が生じますが、行動キャンセル等他のボイコットイベントは発生しません。
	PRINTL [3] NORMAL
	PRINTL 説明　：戦闘中に通常難易度のボイコットイベントが発生します。
	PRINTL 　　　　バランス調整中のため通常プレイには向きません。
	PRINTL [4] HARD
	PRINTL 説明　：戦闘中に高難易度のボイコットイベントが発生します。
	PRINTL 　　　　未実装です。
	CALL INPUTINT( 0, 1, 2, 3, 4)
	IF FLAG:戦闘時ボイコット設定 == RESULT
		PRINTW ボイコット設定を変更しませんでした
	ELSE
		FLAG:戦闘時ボイコット設定 = RESULT
		PRINT ボイコット設定を
		SELECTCASE FLAG:戦闘時ボイコット設定
			CASE 0
				PRINT  なし 
			CASE 1
				PRINT  FLAVOR 
			CASE 2
				PRINT  EASY 
			CASE 3
				PRINT  NORMAL 
			CASE 4
				PRINT  HARD 
		ENDSELECT
		PRINTW に変更しました
	ENDIF

ELSEIF RESULT == 501
	INVERTBIT FLAG:EXTRAイベント設定, 0
	PRINTFORMW EXTRAイベントの発生を\@ GETBIT(FLAG:EXTRAイベント設定, 0) ? あり # なし \@に変更しました

ELSEIF RESULT == 502
	DRAWLINE
	PRINT 現在の設定は
	SELECTCASE FLAG:人間戦闘ステ設定
		CASE 0
			PRINT 通常(バニラ設定)
		CASE 1
			PRINT 命中率改善
		CASE 2
			PRINT 全体的に底上げ
		CASE 3
			PRINT 装備品の補正を（LV/2）％の強化
	ENDSELECT
	PRINTL となっています
	DRAWLINE
	PRINTL [0] 通常(バニラ設定)
	PRINTL 説明　：eraMegaten本来の設定。
	PRINTL 　　　　戦闘中の処理に反映される人間のステータスは悪魔の半分程度。
	PRINTL [1] 命中率改善
	PRINTL 説明　：命中率に関わるステータスの計算法を悪魔のものに近づけた設定。
	PRINTL 　　　　通常モードで攻撃が当たらずイライラしているあなたに。
	PRINTL [2] 全体的に底上げ
	PRINTL 説明　：ＨＰ・ＭＰ以外のすべてのステータスの計算法を悪魔のものに近づけた設定。
	PRINTL 　　　　それでも悪魔よりは１〜２回り弱いので油断は禁物。
	PRINTL [3] 装備品の補正を（LV/2）％の強化
	PRINTL 説明　：人間の装備品の補正を（LV/2）％の強化。
	PRINTL 　　　　レベル50であれば25パーセント、レベル70であれば35パーセント。
	CALL INPUTINT( 0, 1, 2, 3)
	IF FLAG:人間戦闘ステ設定 == RESULT
		PRINTW 設定を変更しませんでした
	ELSE
		FLAG:人間戦闘ステ設定 = RESULT
		SELECTCASE FLAG:人間戦闘ステ設定
			CASE 0
				PRINT 通常
			CASE 1
				PRINT 命中率改善
			CASE 2
				PRINT 全体的に底上げ
			CASE 3
				PRINT 装備品の補正を（LV/2）％の強化
		ENDSELECT
		PRINTW に変更しました
	ENDIF

ELSEIF RESULT == 503
	DRAWLINE
	PRINTL [0] 通常(バニラ設定)
	PRINTL 説明　：eraMegaten本来の設定。
	PRINTL 　　　　素質による威力アップやコストカットは影響しない
	PRINTL [1] 素質影響
	PRINTL 説明　：素質によるコストカットや
	PRINTL 　　　　威力アップの影響を受けるようになる
	CALL INPUTINT( 0, 1)
	CALL BATTLE_SETTING_SET_TALENT, RESULT
	SELECTCASE BATTLE_SETTING_IS_TALENT()
		CASE 0
			PRINTW 通常の設定になりました
		CASE 1
			PRINTW 素質の影響を受けるようになりました
	ENDSELECT
ELSEIF RESULT == 504
	DRAWLINE
	PRINTL [0] 通常(バニラ設定)
	PRINTL 説明　：eraMegaten本来の設定。
	PRINTL 　　　　身動きの取れないバステでも回避が発生する
	PRINTL [1] バステ必中
	PRINTL 説明　：身動きの取れないバステで
	PRINTL 　　　　回避が不可能になる
	CALL INPUTINT( 0, 1)
	CALL BATTLE_SETTING_SET_BAD_STATUS, RESULT
	SELECTCASE BATTLE_SETTING_IS_BAD_STATUS()
		CASE 0
			PRINTW 通常の設定になりました
		CASE 1
			PRINTW バステの影響を受けるようになりました
	ENDSELECT
ELSEIF RESULT == 505
	DRAWLINE
	PRINTL [0] 通常(バニラ設定)
	PRINTL 説明　：eraMegaten本来の設定。
	PRINTL 　　　　敵に弱点を一回でも突かれると１MORE発生する
	PRINTL [1] 変更
	PRINTL 説明　：無効や反射、吸収や回避で
	PRINTL 　　　　敵が１MOREしにくくなる
	CALL INPUTINT( 0, 1)
	CALL BATTLE_SETTING_SET_1MORE, RESULT
	SELECTCASE BATTLE_SETTING_IS_1MORE()
		CASE 0
			PRINTW 通常の設定になりました
		CASE 1
			PRINTW １MOREの設定を変えました
	ENDSELECT
ELSEIF RESULT == 506
	CALL BATTLE_SETTING_INVERT_EQUIP_EFFECT
	PRINTW 設定を変更変更しました
ELSEIF RESULT == 507
	CALL SETTING_INVERT_MAKKA_RATE
	PRINTW 設定を変更変更しました
ELSEIF RESULT == 508
	DRAWLINE
	PRINT 現在のガチャモード
	SELECTCASE FLAG:悪魔ガチャモード
		CASE 0
			PRINT [なし]
		CASE 1
			PRINT [ガチャ起動]
		CASE 2
			PRINT [ガチャ悪魔オンリー]
	ENDSELECT
	PRINTL となっています
	DRAWLINE
	PRINTL [0] なし
	PRINTL 説明　：このオプションおよび機能を使用しません。
	PRINTL [1] ガチャ起動
	PRINTL 説明　：魔貨を使用して、ガチャを回すことが出来ます。
	PRINTL 　　　　ガチャ産の悪魔には専用素質が付き、それ以外の悪魔と区別されます。
	PRINTL 　　　　バランスを崩すので多用は推奨しません。
	PRINTL [2] ガチャ悪魔オンリー
	PRINTL 説明　：魔貨、または専用ポイントを使用したガチャ産の仲魔以外の悪魔は
	PRINTL 　　　　ステータス、および奴隷売却に大きなペナルティが加わります。
	PRINT 　　　　縛りプレイにどうぞ。
	SETCOLOR 0x990033
	PRINTL 　　※探索中にこのモードへの切り替えは推奨しません。
	RESETCOLOR
	CALL INPUTINT( 0, 1, 2)
	IF FLAG:悪魔ガチャモード == RESULT
		PRINTW 表示設定を変更しませんでした
	ELSE
		FLAG:悪魔ガチャモード = RESULT
		PRINT 悪魔ガチャを
		SELECTCASE FLAG:悪魔ガチャモード
			CASE 0
				PRINT [なし]
			CASE 1
				PRINT [ガチャ起動]
			CASE 2
				PRINT [ガチャ悪魔オンリー]
		ENDSELECT
		PRINTW モードに変更しました
	ENDIF
	RESTART

ELSEIF RESULT == 509
	DRAWLINE
	PRINT 現在の設定は
	SELECTCASE FLAG:デビルシフターステ設定
		CASE 0
			PRINT 通常(バニラ設定)
		CASE 1
			PRINT 計算式変更
	ENDSELECT
	PRINTL となっています
	DRAWLINE
	PRINTL [0] 通常(バニラ設定)
	PRINTL 説明　：eraMegaten本来の設定。
	PRINTL 　　　　リンク悪魔のステに応じて、本体の能力の合計を交わした後、強化値を加える。
	PRINTL 　　　　初期リンク悪魔はcsvステータスに基づいて計算する。
	PRINTL [1] 計算式変更
	PRINTL 説明　：リンク悪魔の各ステータス/10を本体に加える。
	PRINTL 　　　　初期リンク悪魔は、各csvステータス/5と本体のレベル/30を加える。
	CALL INPUTINT( 0, 1)
	IF FLAG:デビルシフターステ設定 == RESULT
		PRINTW 設定を変更しませんでした
	ELSE
		FLAG:デビルシフターステ設定 = RESULT
		SELECTCASE FLAG:デビルシフターステ設定
			CASE 0
				PRINT 通常(バニラ設定)
			CASE 1
				PRINT 計算式変更
		ENDSELECT
		PRINTW に変更しました
	ENDIF
	RESTART

ELSEIF RESULT == 510
	DRAWLINE
	PRINT 現在の設定は
	SELECTCASE BATTLE_SETTING_IS_EQUIPTHEORY()
		CASE 0
			PRINT 変更しない
		CASE 1
			PRINT 変更する
	ENDSELECT
	PRINTL となっています
	DRAWLINE
	PRINTL [0] 変更しない
	PRINTL 説明　：デフォルトの設定。
	PRINTL 　　　　装備知識スキル持ちの悪魔は人間と同じようにLv80以上から補正が有効となる
	PRINTL [1] 変更する
	PRINTL 説明　：装備知識スキル持ちの悪魔はLv80以上では銃関連の装備の補正は無効となる。
	PRINTL 　　　　また、P3型以外のペルソナ使いでも装備によるバステ耐性変更が有効となる。
	CALL INPUTINT( 0, 1)
	CALL BATTLE_SETTING_SET_EQUIPTHEORY, RESULT
	SELECTCASE BATTLE_SETTING_IS_EQUIPTHEORY()
		CASE 0
			PRINTW 通常の設定になりました
		CASE 1
			PRINTW 装備による影響を変更しました。
	ENDSELECT
	RESTART
ELSE
	GOTO INPUT_LOOP
ENDIF

RESTART

;=========================================
;[0]テキスト関連設定
;=========================================
@TEXT_SETTING
PRINTL テキストの設定をしてください
PRINT 現在の設定：
IF FLAG:6 == 1 && FLAG:7 == 2
	PRINT 【口上テキスト（常に表示）＋情景テキスト】
ELSEIF FLAG:6 == 1 && FLAG:7 == 1
	PRINT 【口上テキスト（一度だけ表示）＋情景テキスト】
ELSEIF FLAG:6 == 1 && FLAG:7 == -1
	PRINT 【情景テキストのみ】
ELSEIF FLAG:6 == 0 && FLAG:7 == -1
	PRINT 【テキストを表示しない】
ENDIF
PRINTL
;PRINTFORM             【自動喘ぎ声機能:\@ FLAG:自動喘ぎ声 ? ON  # OFF \@】
PRINTL
PRINTFORM             【RPG口上表示:\@ FLAG:RPG口上 ? OFF  # ON \@】

PRINTL 　
PRINTL [0] - 口上テキスト（常に表示）＋情景テキスト
PRINTL [1] - 口上テキスト（一度だけ表示）＋情景テキスト
PRINTL [2] - 情景テキストのみ
PRINTL [3] - テキストを表示しない
;PRINTL [4] - 自動喘ぎ声切り替え
PRINTL [5] - RPG口上切り替え
PRINTL [100]-戻る
$INPUT_LOOP
INPUT
IF RESULT == 100
	RETURN 0
ELSEIF RESULT == 0
	PRINTL 【口上テキスト（常に表示）＋情景テキスト】に設定しました
	FLAG:6 = 1
	FLAG:7 = 2
ELSEIF RESULT == 1
	PRINTL 【口上テキスト（一度だけ表示）＋情景テキスト】に設定しました
	FLAG:6 = 1
	FLAG:7 = 1
ELSEIF RESULT == 2
	PRINTL 【情景テキストのみ】に設定しました
	FLAG:6 = 1
	FLAG:7 = -1
ELSEIF RESULT == 3
	PRINTL 【テキストを表示しない】に設定しました
	FLAG:6 = 0
	FLAG:7 = -1
;ELSEIF RESULT == 4
;	PRINTFORMW 自動喘ぎ声機能を\@ FLAG:自動喘ぎ声 ? 無効 # 有効 \@にしました
;	IF FLAG:自動喘ぎ声 == 0
;		FLAG:自動喘ぎ声 = 1
;	ELSE
;		FLAG:自動喘ぎ声 = 0
;	ENDIF
ELSEIF RESULT == 5
	PRINTFORMW RPG口上を\@ FLAG:RPG口上 ? 有効 # 無効 \@にしました
	IF FLAG:RPG口上 == 0
		FLAG:RPG口上 = 1
	ELSE
		FLAG:RPG口上 = 0
	ENDIF
ELSE
	GOTO INPUT_LOOP
ENDIF

;================================================
;[1]射精位置設定
;================================================
@SAMENPLACE_SETTING
PRINTL 射精時に自動で選択する射精箇所を選択してください
PRINT 現在射精時に自動選択する射精箇所は：
	CALL CHECK_SAMEN_PLACE
PRINTL 
PRINTL [0] 「髪」
PRINTL [1] 「顔」
PRINTL [2] 「胸」
PRINTL [3] 「腹」
PRINTL [4] 「腋」
PRINTL [5] 「太もも」
PRINTL [6] 「割れ目」
PRINTL [7] 「尻」
PRINTL [8] 「そのまま射精」or「コンドームに射精」
PRINTL [9] 「その都度選択」
$INPUT_LOOP
INPUT
IF RESULT == 0
	PRINTW ―射精先を髪に固定しました―
	FLAG:99 = 0
ELSEIF RESULT == 1
	PRINTW ―射精先を顔に固定しました―
	FLAG:99 = 1
ELSEIF RESULT == 2
	PRINTW ―射精先を胸に固定しました―
	FLAG:99 = 2
ELSEIF RESULT == 3
	PRINTW ―射精先を腹に固定しました―
	FLAG:99 = 3
ELSEIF RESULT == 4
	PRINTW ―射精先を腋に固定しました―
	FLAG:99 = 4
ELSEIF RESULT == 5
	PRINTW ―射精先を太ももに固定しました―
	FLAG:99 = 5
ELSEIF RESULT == 6
	PRINTW ―射精先を割れ目に固定しました―
	FLAG:99 = 6
ELSEIF RESULT == 7
	PRINTW ―射精先を尻に固定しました―
	FLAG:99 = 7
ELSEIF RESULT == 8
	PRINTW ―選択せずそのまま射精するよう設定しました―
	FLAG:99 = 8
ELSEIF RESULT == 9
	PRINTW ―射精の度に選択するように設定しました―
	FLAG:99 = 9
ELSE
	GOTO INPUT_LOOP
ENDIF


@CHECK_SAMEN_PLACE
IF FLAG:99 == 0
	PRINT 　　　　　髪
ELSEIF FLAG:99 == 1
	PRINT 　　　　　顔
ELSEIF FLAG:99 == 2
	PRINT 　　　　　胸
ELSEIF FLAG:99 == 3
	PRINT 　　　　　腹
ELSEIF FLAG:99 == 4
	PRINT 　　　　　腋
ELSEIF FLAG:99 == 5
	PRINT 　　　太もも
ELSEIF FLAG:99 == 6
	PRINT 　　　割れ目
ELSEIF FLAG:99 == 7
	PRINT 　　　　　尻
ELSEIF FLAG:99 == 8
	PRINT そのまま射精
ELSEIF FLAG:99 == 9
	PRINT その都度選択
ENDIF



@TYPE_COLOR_SETTING
#LOCALSIZE 21
FOR LOCAL, 0, 6
	LOCAL:20 = FLAG:(GETNUM(FLAG, "通常カラー")+LOCAL)
	CALL GETCOLOR_9(LOCAL:20)
	LOCAL:(1 + LOCAL*3) = RESULT
	LOCAL:(2 + LOCAL*3) = RESULT:1
	LOCAL:(3 + LOCAL*3) = RESULT:2
NEXT
$START
FOR LOCAL, 0, 6
	SETCOLOR LOCAL:(1+LOCAL*3), LOCAL:(2+LOCAL*3), LOCAL:(3+LOCAL*3)
	CALL GETCOLOR_9(LOCAL:(1+LOCAL*3), LOCAL:(2+LOCAL*3), LOCAL:(3+LOCAL*3))
	FLAG:(GETNUM(FLAG, "通常カラー")+LOCAL) = RESULT
	IF LOCAL == 0
		PRINTL 通常
	ELSEIF LOCAL == 1
		PRINTL 弱点
	ELSEIF LOCAL == 2
		PRINTL 耐性
	ELSEIF LOCAL == 3
		PRINTL 無効
	ELSEIF LOCAL == 4
		PRINTL 吸収
	ELSEIF LOCAL == 5
		PRINTL 反射
	ENDIF
	PRINTFORM Ｒ{LOCAL:(1+LOCAL*3),3}　
	LOCALS = [{LOCAL*12, 2}]
	PRINTBUTTON LOCALS, LOCAL*12
	PRINT +1　
	LOCALS = [{LOCAL*12+1, 2}]
	PRINTBUTTON LOCALS, LOCAL*12+1
	PRINT +10　
	LOCALS = [{LOCAL*12+2, 2}]
	PRINTBUTTON LOCALS, LOCAL*12+2
	PRINT -1　
	LOCALS = [{LOCAL*12+3,2}]
	PRINTBUTTON LOCALS, LOCAL*12+3
	PRINTL -10　
	PRINTFORM Ｇ{LOCAL:(2+LOCAL*3),3}　
	LOCALS = [{LOCAL*12+4,2}]
	PRINTBUTTON LOCALS, LOCAL*12+4
	PRINT +1　
	LOCALS = [{LOCAL*12+5, 2}]
	PRINTBUTTON LOCALS, LOCAL*12+5
	PRINT +10　
	LOCALS = [{LOCAL*12+6, 2}]
	PRINTBUTTON LOCALS, LOCAL*12+6
	PRINT -1　
	LOCALS = [{LOCAL*12+7, 2}]
	PRINTBUTTON LOCALS, LOCAL*12+07
	PRINTL -10　
	PRINTFORM Ｂ{LOCAL:(3+LOCAL*3),3}　
	LOCALS = [{LOCAL*12+8, 2}]
	PRINTBUTTON LOCALS, LOCAL*12+8
	PRINT +1　
	LOCALS = [{LOCAL*12+9, 2}]
	PRINTBUTTON LOCALS, LOCAL*12+9
	PRINT +10　
	LOCALS = [{LOCAL*12+10, 2}]
	PRINTBUTTON LOCALS, LOCAL*12+10
	PRINT -1　
	LOCALS = [{LOCAL*12+11, 2}]
	PRINTBUTTON LOCALS, LOCAL*12+11
	PRINTL -10　
NEXT
RESETCOLOR
PRINTL [100] 戻る
INPUT
SIF RESULT == 100
	RETURN 0
SIF RESULT < 0 || RESULT > 71
	GOTO START
LOCAL = RESULT / 12 * 3
LOCAL:20 = RESULT % 12
SELECTCASE LOCAL:20
	CASE 0
		LOCAL:(1 + LOCAL) += 1
	CASE 1
		LOCAL:(1 + LOCAL) += 10
	CASE 2
		LOCAL:(1 + LOCAL) -= 1
	CASE 3
		LOCAL:(1 + LOCAL) -= 10
	CASE 4
		LOCAL:(2 + LOCAL) += 1
	CASE 5
		LOCAL:(2 + LOCAL) += 10
	CASE 6
		LOCAL:(2 + LOCAL) -= 1
	CASE 7
		LOCAL:(2 + LOCAL) -= 10
	CASE 8
		LOCAL:(3 + LOCAL) += 1
	CASE 9
		LOCAL:(3 + LOCAL) += 10
	CASE 10
		LOCAL:(3 + LOCAL) -= 1
	CASE 11
		LOCAL:(3 + LOCAL) -= 10
ENDSELECT
FOR LOCAL, 1, 19
	SIF LOCAL:LOCAL < 0
		LOCAL:LOCAL = 0
	
	SIF LOCAL:LOCAL > 255
		LOCAL:LOCAL = 255
NEXT
CLEARLINE 26
GOTO START


;=====================================
;[9]オートリカバー設定
;=====================================
@AUTO_RECOVER_SETTING
#DIM LCOUNT
PRINTFORML オートリカバー設定
DRAWLINE
PRINTFORML [0] - [\@ GETBIT(FLAG:オートリカバー設定1, 0) == 0 ? 魔法 # アイテム \@]を優先的に使用
PRINT [1] - HPが
IF PART_VAR_READ(FLAG:オートリカバー設定3, 3, 1) == 100
	PRINTL 1ポイントでも減っていたら回復する
ELSE
	PRINTFORML {PART_VAR_READ(FLAG:オートリカバー設定3, 3, 1)}％以上なら回復しない
ENDIF
PRINTFORML [2] - 状態異常\@ GETBIT(FLAG:オートリカバー設定1, 1) == 0 ? は[回復しない] # を[回復する]\@
PRINTFORML [3] - 瀕死\@ GETBIT(FLAG:オートリカバー設定1, 2) == 0 ? は[復活させない] # を[復活させる]\@
DRAWLINE
LOCALS = [10] - 回復魔法は
PRINTFORM %LOCALS, 28, LEFT%
IF PART_VAR_READ(FLAG:オートリカバー設定3, 3, 0) == 100
	PRINTL 一切使用しない
ELSEIF PART_VAR_READ(FLAG:オートリカバー設定3, 3, 0) != 0
	PRINTFORML MPが{PART_VAR_READ(FLAG:オートリカバー設定3, 3, 0)}％以下なら使用しない
ELSE
	PRINTL MPがある限り使用する
ENDIF

LOCALS:0 = 傷薬（HP+30）
LOCALS:1 = 魔石（HP+25\%）
LOCALS:2 = 牛黄丹（HP+200）
LOCALS:3 = 宝玉（HP+100\%）
LOCALS:4 = ディス系アイテム
LOCALS:5 = イワクラの水
LOCALS:6 = 道返玉（HP25\%復活）
LOCALS:7 = 反魂香（HP100\%復活）
FOR LCOUNT, 0, 8
	PRINTFORM [{LCOUNT + 20}] - %LOCALS:LCOUNT, 21, LEFT%
	IF PART_VAR_READ(FLAG:オートリカバー設定2, 2, LCOUNT) == 10
		PRINTL 一切使用しない
	ELSEIF PART_VAR_READ(FLAG:オートリカバー設定2, 2, LCOUNT) == 0
		PRINTL あるだけ使用する
	ELSE
		PRINTFORML {PART_VAR_READ(FLAG:オートリカバー設定2, 2, LCOUNT)}個以下になったら使用しない
	ENDIF
NEXT

DRAWLINE
PRINTFORML [99] - オートリカバー実行時に\@ GETBIT(FLAG:オートリカバー設定1, 3) == 0 ? [確認しない] # [確認を取る]\@
DRAWLINE
PRINTL [100] - 戻る
CALL INPUTINT, 0, 1, 2, 3, 10, 20, 21, 22, 23, ,24 ,25 ,26 ,27 ,99, 100
SELECTCASE RESULT
	CASE 0
		INVERTBIT FLAG:オートリカバー設定1, 0
	CASE 1
		PRINTL HPが何％を切ったら回復しますか？
		CALL INPUT_MANY, 1, 100
		SIF RESULT != 0
			FLAG:オートリカバー設定3 = PART_VAR_WRITE(FLAG:オートリカバー設定3, 3, 1, RESULT)
	CASE 2
		INVERTBIT FLAG:オートリカバー設定1, 1
	CASE 3
		INVERTBIT FLAG:オートリカバー設定1, 2
	CASE 10
		PRINTL MPは何％残しますか？
		CALL INPUT_MANY, 0, 100
		FLAG:オートリカバー設定3 = PART_VAR_WRITE(FLAG:オートリカバー設定3, 3, 0, RESULT)
	CASE 20 TO 27
		LOCAL = RESULT - 20
		PRINTL アイテムは何個残しますか？
		CALL INPUT_MANY, 0, 10
		FLAG:オートリカバー設定2 = PART_VAR_WRITE(FLAG:オートリカバー設定2, 2, LOCAL, RESULT)
	CASE 99
		INVERTBIT FLAG:オートリカバー設定1, 3
	CASEELSE
		RETURN 0
ENDSELECT
RESTART



;英語怪しい
;一つの変数に複数の数値を保存できるようにする関数
;負数は不可
;例：12,34,56という３つの数字を一つのFLAGに書き込める
;FLAG:123 = 0
;FLAG:123 = PART_VAR_WRITE(FLAG:123, 2, 0, 12)
;FLAG:123 = PART_VAR_WRITE(FLAG:123, 2, 1, 34)
;FLAG:123 = PART_VAR_WRITE(FLAG:123, 2, 2, 56)
;この時点のFLAG:123 = 563412
;PRINTFORM PART_VAR_READ(FLAG:123, 2, 2) → 56
;PRINTFORM PART_VAR_READ(FLAG:123, 2, 0) → 12
;PRINTFORM PART_VAR_READ(FLAG:123, 2, 1) → 34
;Emueraでは64ビット符号付整数、-9223372036854775808〜9223372036854775807の範囲の値を扱える
;つまりこの関数を使う時は一つの変数につき18桁まで


;0:読み込む変数　1:分割桁数　2:何番目か
@PART_VAR_READ(ARG, ARG:1, ARG:2)
#FUNCTION
SIF ARG:1 <= 0 || ARG:2 < 0 || ARG:1 * (ARG:2 + 1) > 18
	PRINTFORML ERROR!引数が異常です ARG:0={ARG} ARG:1={ARG:1} ARG:2={ARG:2}
ARG /= POWER(10, ARG:1 * ARG:2)
RETURNF ARG % POWER(10, ARG:1)
;0:書き込む変数　1:分割桁数　2:何番目か　3:書き込む内容
;例：
;FLAG:123 = PARTITION_VARIABLE_WRITE(FLAG:123, 2, 1, 57)
@PART_VAR_WRITE(ARG, ARG:1, ARG:2, ARG:3)
#FUNCTION
SIF ARG:1 <= 0 || ARG:2 < 0 || ARG:3 < 0 || ARG:1 * (ARG:2 + 1) > 18
	PRINTFORML ERROR!引数が異常です ARG:0={ARG} ARG:1={ARG:1} ARG:2={ARG:2} ARG:3={ARG:3}
LOCAL = ARG / POWER(10, ARG:1 * (ARG:2+1))
LOCAL *=POWER(10, ARG:1)
LOCAL += ARG:3
LOCAL *=POWER(10, ARG:1 * ARG:2)
LOCAL += ARG % POWER(10, ARG:1 * ARG:2)
RETURNF LOCAL


;=====================================
;[19]ＮＴＲ設定
;=====================================
@NTR_CONFIG
#LOCALSIZE 1
#DIM LCOUNT
LOCAL = LINECOUNT
REDRAW 0
;表示
DRAWLINE
PRINTFORM [ 0] %"ＮＴＲ機能" , 20 , LEFT% 
CALL NTR_SHOW_ONOFF , GETBIT(FLAG:ＮＴＲ機能 , 0) , 1
SIF !GETBIT(FLAG:ＮＴＲ機能 , 0)
	SETCOLOR COLOR("GRAY")
PRINTFORM [ 1] %"食堂ＮＴＲイベント" , 28 , LEFT% 
CALL NTR_SHOW_ONOFF , GETBIT(FLAG:ＮＴＲ機能 , 1)
PRINTFORM [ 2] %"娼館ＮＴＲイベント" , 28 , LEFT% 
CALL NTR_SHOW_ONOFF , GETBIT(FLAG:ＮＴＲ機能 , 2)
PRINTFORM [ 3] %"レンタル奴隷ＮＴＲイベント" , 28 , LEFT% 
CALL NTR_SHOW_ONOFF , GETBIT(FLAG:ＮＴＲ機能 , 3)
PRINTFORM [ 4] %"公衆便所ＮＴＲイベント" , 28 , LEFT% 
CALL NTR_SHOW_ONOFF , GETBIT(FLAG:ＮＴＲ機能 , 4)
PRINTFORM [ 5] %"ストリップ劇場ＮＴＲイベント" , 28 , LEFT% 
CALL NTR_SHOW_ONOFF , GETBIT(FLAG:ＮＴＲ機能 , 5)
PRINTFORM [ 6] %"コンサートＮＴＲイベント" , 28 , LEFT% 
CALL NTR_SHOW_ONOFF , GETBIT(FLAG:ＮＴＲ機能 , 6)
PRINTFORM [ 7] %"訪問販売員ＮＴＲイベント" , 28 , LEFT% 
CALL NTR_SHOW_ONOFF , GETBIT(FLAG:ＮＴＲ機能 , 7)
PRINTFORM [ 8] %"妻拉致イベント" , 28 , LEFT% 
CALL NTR_SHOW_ONOFF , GETBIT(FLAG:ＮＴＲ機能 , 8)
PRINTFORM [63] %"上司イベント" , 28 , LEFT% 
CALL NTR_SHOW_ONOFF , GETBIT(FLAG:ＮＴＲ機能 , 63)
PRINTFORML [89] %"ＮＴＲ客の設定" , 28 , LEFT% 
PRINTFORM [90] %"ＮＴＲペナルティ" , 28 , LEFT% 
CALL NTR_SHOW_ONOFF , FLAG:ＮＴＲハードモード , , "有り" , "無し"
RESETCOLOR
PRINTL
PRINTFORML [100]戻る
REDRAW 1
;入力と処理
$INPUT_LOOP
INPUT
IF RESULT == 100
	RETURN 1
ELSEIF RESULT == 0
	INVERTBIT FLAG:ＮＴＲ機能 , 0
	IF GETBIT(FLAG:ＮＴＲ機能 , 0)
		FOR LCOUNT, 0, 9
			SETBIT FLAG:ＮＴＲ機能 , LCOUNT+1
		NEXT
	ELSE
		FLAG:ＮＴＲ機能 = 0
		FLAG:ＮＴＲハードモード = 0
		FLAG:ＮＴＲ客の設定 = 0
	ENDIF
ELSEIF RANGE(RESULT , 1 , 63) && GETBIT(FLAG:ＮＴＲ機能 , 0)
	INVERTBIT FLAG:ＮＴＲ機能 , RESULT
ELSEIF RESULT == 89 && GETBIT(FLAG:ＮＴＲ機能 , 0)
	PRINTL
	PRINTFORML ＮＴＲ客の設定を選択してください
	PRINTL [0] 凡人
	PRINTL [1] 鬼畜
	PRINTL [2] 外道
	CALL INPUTINT,0,1,2
	FLAG:ＮＴＲ客の設定 = RESULT
	PRINTFORM ＮＴＲ客の設定を [
	SELECTCASE FLAG:ＮＴＲ客の設定
		CASE 0
			PRINT 凡人
		CASE 1
			PRINT 鬼畜
		CASE 2
			PRINT 外道
	ENDSELECT
	PRINTFORMW ] に変更しました。
ELSEIF RESULT == 90 && GETBIT(FLAG:ＮＴＲ機能 , 0)
	INVERTBIT FLAG:ＮＴＲハードモード , 0
ELSE
	CLEARLINE 1
	GOTO INPUT_LOOP
ENDIF
REDRAW 0
CLEARLINE LINECOUNT - LOCAL
RESTART


@NTR_SHOW_ONOFF(ARG , ARG:1 = 0 ,  ARGS = "  ON" , ARGS:1 = " OFF")
SIF  (GETBIT(FLAG:ＮＴＲ機能 , 0) || ARG:1)
	RESETCOLOR
PRINT [
IF ARG && (GETBIT(FLAG:ＮＴＲ機能 , 0) || ARG:1)
	SETCOLOR COLOR("AQUA")
ELSE
	SETCOLOR COLOR("GRAY")
ENDIF
PRINTFORM %ARGS%
SIF  (GETBIT(FLAG:ＮＴＲ機能 , 0) || ARG:1)
	RESETCOLOR
PRINT  / 
IF !ARG &&  (GETBIT(FLAG:ＮＴＲ機能 , 0) || ARG:1)
	SETCOLOR COLOR("AQUA")
ELSE
	SETCOLOR COLOR("GRAY")
ENDIF
PRINTFORM  %ARGS:1%
SIF  (GETBIT(FLAG:ＮＴＲ機能 , 0) || ARG:1)
	RESETCOLOR
PRINTL ]

;==============================================================


@DUNGEON_COMMAND_CONFIG
SIF FLAG:ダンジョン内操作設定 < 0 || FLAG:ダンジョン内操作設定 > 1
	FLAG:ダンジョン内操作設定 = 0

DRAWLINE
PRINTL ダンジョン内での操作を設定します
DRAWLINE
PRINT 現在の設定は
SELECTCASE FLAG:ダンジョン内操作設定
	CASE 0
		PRINT [デフォルト]
	CASE 1
		PRINT [ＦＰＳ]
ENDSELECT
PRINTL タイプです。
SELECTCASE GLOBAL:ダンジョン内操作設定
	CASE 0
		PRINT [デフォルト]
	CASE 1
		PRINT [ＦＰＳ]
ENDSELECT
PRINTL タイプです。
PRINTL
PRINTL [0] [デフォルト]タイプにする
PRINTL [1] [ＦＰＳ]タイプにする
PRINTL [2] [デフォルト]タイプにする(全セーブデータ共有)
PRINTL [3] [ＦＰＳ]タイプにする(全セーブデータ共有)

CALL INPUTINT,0,1,2,3

SELECTCASE RESULT
	CASE 0
		FLAG:ダンジョン内操作設定 = 0
		PRINTL [デフォルト]タイプに設定しました
	CASE 1
		FLAG:ダンジョン内操作設定 = 1
		PRINTL [ＦＰＳ]タイプに設定しました
	CASE 2
		GLOBAL:ダンジョン内操作設定 = 0
		FLAG:ダンジョン内操作設定 = 0
		PRINTL [デフォルト]タイプに設定しました
	CASE 3
		GLOBAL:ダンジョン内操作設定 = 1
		FLAG:ダンジョン内操作設定 = 1
		SAVEGLOBAL
		PRINTL [ＦＰＳ]タイプに設定しました
	CASEELSE
		FLAG:ダンジョン内操作設定 = 0	
		PRINTL 範囲外の数値が設定されました、デフォルトの設定に戻します
ENDSELECT
SAVEGLOBAL

@INPUT_YN_CONFIG
IF FLAG:二択入力設定 < 0 || FLAG:二択入力設定 > 1
	FLAG:二択入力設定 = 0
ENDIF

DRAWLINE
PRINTL 二択選択時の入力を設定します
DRAWLINE
PRINT 現在の設定は
SELECTCASE FLAG:二択入力設定
	CASE 0
		PRINT [デフォルト]
	CASE 1
		PRINT [はい／いいえのみ、ＹやＮキーに反応する]
	CASE 2
		PRINT [すべての二択で、ＹやＮキーに反応する]
ENDSELECT
PRINTL タイプです。
PRINTL
PRINTL [0] [デフォルト]タイプにする
PRINTL [1] [はい／いいえのみ、ＹやＮキーに反応する]タイプにする
PRINTL [2] [すべての二択で、ＹやＮキーに反応する]タイプにする

CALL INPUTINT,0,1,2

SELECTCASE RESULT
	CASE 0
		FLAG:二択入力設定 = 0
		PRINTL [デフォルト]タイプに設定しました
	CASE 1
		FLAG:二択入力設定 = 1
		PRINTL [はい／いいえのみ、ＹやＮキーに反応する]タイプに設定しました
	CASE 2
		FLAG:二択入力設定 = 2
		PRINTL [すべての二択で、ＹやＮキーに反応する]タイプに設定しました
	CASEELSE
		FLAG:二択入力設定 = 0
		PRINTL 範囲外の数値が設定されました、デフォルトの設定に戻します
ENDSELECT

;---- EDIT 労役実行確認省略オプション追加(2011/02/04) ADD START ---------
;========================================================================
; 労役者一括選択設定オプション
; 食堂、売春で働く人を一括で選択できるようにするオプション
;========================================================================
@WORK_CONFIRM_SKIP_CONFIG
IF FLAG:労役実行確認省略設定 < 0 || FLAG:労役実行確認省略設定 > 1
	FLAG:労役実行確認省略設定 = 0
ENDIF

DRAWLINE
PRINTL 食堂／売春での労役で実行するかの確認を省略するか設定します。
DRAWLINE
PRINT 現在の設定は
SELECTCASE FLAG:労役実行確認省略設定
	CASE 0
		PRINT [省略しない]
	CASE 1
		PRINT [省略する]
ENDSELECT
PRINTL です。
PRINTL
CALL INPUT_YN,"[省略しない]","[省略する]"
IF RESULT == 0
	FLAG:労役実行確認省略設定 = 0
	PRINTL 労役の実行確認を[省略しない]に設定しました。
ELSE
	FLAG:労役実行確認省略設定 = 1
	PRINTL 労役の実行確認を[省略する]に設定しました。
ENDIF
;---- EDIT 労役実行確認省略オプション追加(2011/02/04) ADD END -----------

;---- EDIT 夜這い不許可性別設定オプション追加(2011/03/10) ADD START ---------
;========================================================================
; 夜這い不許可性別設定オプション
; キャラクタが仲魔になった時に特定の性別のキャラを自動的に
;========================================================================
@CONTROL_SELF_CONFIG

DRAWLINE
PRINTL 特定の性別のキャラクタが新たに仲魔になった際、夜這いを自動的に不許可にすることが出来ます
DRAWLINE
PRINTL
$PRINT
PRINTFORML [0] 男(男の娘を除く) [\@ FLAG:夜這い不許可性別 & 1 ? 不許可 # 許可\@]
PRINTFORML [1] 男の娘           [\@ FLAG:夜這い不許可性別 & 2 ? 不許可 # 許可\@]
PRINTFORML [2] 女               [\@ FLAG:夜這い不許可性別 & 4 ? 不許可 # 許可\@]
PRINTL [100] 戻る
PRINTL
CALL INPUTINT,0,1,2,100
IF RESULT == 100
	RETURN 0
ELSE
	INVERTBIT FLAG:夜這い不許可性別,RESULT
	CLEARLINE 6
	GOTO PRINT
ENDIF
;---- EDIT 夜這い不許可性別設定オプション追加(2011/03/10) ADD END -----------

@PRINTCPERLINE_SETTING
#LOCALSIZE 1
LOCAL = PRINTCPERLINE()
DRAWLINE
PRINTL 一行に表示するコマンドの数を変更します
DRAWLINE
PRINT [0] ショップコマンド 
IF FLAG:ショップコマンドを並べる数
	PRINTFORML [ON:{FLAG:ショップコマンドを並べる数}]
ELSE
	PRINTL [OFF]
ENDIF
PRINT [1] 調教コマンド     
IF FLAG:調教コマンドを並べる数
	PRINTFORML [ON:{FLAG:調教コマンドを並べる数}]
ELSE
	PRINTL [OFF]
ENDIF
PRINTFORM %"[2] 調教パラメータ", 21, LEFT%
IF FLAG:調教パラメータを並べる数
	PRINTFORML [ON:{FLAG:調教パラメータを並べる数}]
ELSE
	PRINTL [OFF]
ENDIF
PRINTL [100] 戻る
PRINTL
CALL INPUTINT ,0,1,2,100
SELECTCASE RESULT
	CASE 100
		RETURN 0
	CASE 0
		GOTO SHOP_SET
	CASE 1
		GOTO TRAIN_SET
	CASE 2
		GOTO TRAIN_PALAM_SET
ENDSELECT

$SHOP_SET
DRAWLINE
PRINTL 一行に表示するショップコマンドの数を変更します
PRINTL (emuera側の設定より大きくする事はできません)
PRINTL 
PRINTFORML 現在の設定は {FLAG:ショップコマンドを並べる数} です
DRAWLINE
PRINTL [0] 設定をemueraに任せる
SIF LOCAL == 0 || LOCAL >= 3
	PRINTL [3] ３つ並べる
SIF LOCAL == 0 || LOCAL >= 4
	PRINTL [4] ４つ並べる
SIF LOCAL == 0 || LOCAL >= 5
	PRINTL [5] ５つ並べる
SIF LOCAL == 0 || LOCAL >= 6
	PRINTL [6] ６つ並べる
PRINTL [100] キャンセル
CALL INPUTINT ,0,3,4,5,6,100
SELECTCASE RESULT
	CASE 100
	
	CASE 0
		FLAG:ショップコマンドを並べる数 = (PRINTCPERLINE() > 0 ? PRINTCPERLINE() # 3)
		PRINTW 設定をemueraに任せます
	CASE 3 TO 6
		;emuera側の設定より大きくする事はできない
		IF LOCAL != 0 && RESULT > LOCAL
			PRINTW emuera側の設定より大きくする事はできません
			GOTO SHOP_SET
		ELSE
			FLAG:ショップコマンドを並べる数 = RESULT
			PRINTFORMW ショップコマンドを並べる数を {FLAG:ショップコマンドを並べる数}に設定しました
		ENDIF
ENDSELECT
RESTART

$TRAIN_SET
DRAWLINE
PRINTL 一行に表示する調教コマンドの数を変更します
PRINTL (emuera側の設定より大きくする事はできません)
PRINTL 
PRINTFORML 現在の設定は {FLAG:調教コマンドを並べる数} です
DRAWLINE
PRINTL [0] 設定をemueraに任せる
SIF LOCAL == 0 || LOCAL >= 3
	PRINTL [3] ３つ並べる
SIF LOCAL == 0 || LOCAL >= 4
	PRINTL [4] ４つ並べる
SIF LOCAL == 0 || LOCAL >= 5
	PRINTL [5] ５つ並べる
SIF LOCAL == 0 || LOCAL >= 6
	PRINTL [6] ６つ並べる
PRINTL [100] キャンセル
CALL INPUTINT ,0,3,4,5,6,100
SELECTCASE RESULT
	CASE 100
	
	CASE 0
		FLAG:調教コマンドを並べる数 = (PRINTCPERLINE() > 0 ? PRINTCPERLINE() # 4)
		PRINTW 設定をemueraに任せます
	CASE 3 TO 6
		;emuera側の設定より大きくする事はできない
		IF LOCAL != 0 && RESULT > LOCAL
			PRINTW emuera側の設定より大きくする事はできません
			GOTO TRAIN_SET
		ELSE
			FLAG:調教コマンドを並べる数 = RESULT
			PRINTFORMW 調教コマンドを並べる数を {FLAG:調教コマンドを並べる数}に設定しました
		ENDIF
ENDSELECT
RESTART

$TRAIN_PALAM_SET
DRAWLINE
PRINTL 一行に表示する調教パラメータの数を変更します
PRINTL (emuera側の設定より大きくする事はできません)
PRINTL 
PRINTFORML 現在の設定は {FLAG:調教パラメータを並べる数} です
DRAWLINE
PRINTL [0] 設定をemueraに任せる
SIF LOCAL == 0 || LOCAL >= 3
	PRINTL [3] ３つ並べる
SIF LOCAL == 0 || LOCAL >= 4
	PRINTL [4] ４つ並べる
SIF LOCAL == 0 || LOCAL >= 5
	PRINTL [5] ５つ並べる
SIF LOCAL == 0 || LOCAL >= 6
	PRINTL [6] ６つ並べる
PRINTL [100] キャンセル
CALL INPUTINT ,0,3,4,5,6,100
SELECTCASE RESULT
	CASE 100
	CASE 0
		FLAG:調教パラメータを並べる数 = (PRINTCPERLINE() > 0 ? PRINTCPERLINE() # 3)
		PRINTW 設定をemueraに任せます
	CASE 3 TO 6
		;emuera側の設定より大きくする事はできない
		IF LOCAL != 0 && RESULT > LOCAL
			PRINTW emuera側の設定より大きくする事はできません
			GOTO TRAIN_SET
		ELSE
			FLAG:調教パラメータを並べる数 = RESULT
			PRINTFORMW 調教パラメータを並べる数を {FLAG:調教パラメータを並べる数}に設定しました
		ENDIF
ENDSELECT
RESTART

@SHOPPRINTCPL()
#FUNCTION
IF FLAG:ショップコマンドを並べる数 == 0 
	IF PRINTCPERLINE() == 0
		RETURNF 9999
	ELSE
		RETURNF PRINTCPERLINE()
	ENDIF
ENDIF
RETURNF FLAG:ショップコマンドを並べる数

@TRAINPRINTCPL()
#FUNCTION
IF FLAG:調教コマンドを並べる数 == 0
	IF PRINTCPERLINE() == 0
		RETURNF 9999
	ELSE
		RETURNF PRINTCPERLINE()
	ENDIF
ENDIF
RETURNF FLAG:調教コマンドを並べる数

;===========================================================
;[26] - リスト表示数設定
;===========================================================
;-------------------------------------------------
;関数名:リスト表示数
;概　要:リスト表示数取得関数
;引　数:なし
;戻り値:リスト表示数(10〜50)。未設定の場合は20
;備　考:式中関数
;いちいち三項書くのも面倒なのでつい
;-------------------------------------------------
@リスト表示数
#FUNCTION
RETURNF FLAG:リスト表示数設定 ? FLAG:リスト表示数設定 # 20

;===========================================================
;[27] - 合体用ソフトクイック設定
;===========================================================
;-------------------------------------------------
;関数名:FSQS_BIT
;概　要:合体用ソフトクイック設定管理関数
;引　数:ARG:0…インストールソフトの番号(とりあえず500〜599)
;　　　 ARG:1…[省略可]モード(-1.GET/0.GET & CHECK/1.SET/2.CLEAR/3.INVERT/4.SAVE/5.RESET)
;　　　        省略した場合は0(GET & CHECK)。ソフトを持っていない場合も0を返す
;戻り値:真偽値(0か1)。計算後のARG:0番目のBITの状態を返す
;備　考:式中関数
;対象ソフトの設定がどうなっているか管理している関数
;細々とした機能があって無駄にややこしい作り
;他所では基本的にソフト番号だけ渡せばいいと思う
;SOFT_IS_FUSIONSOFTは別に呼ぶ必要がある(状況によって変わるので)
;-------------------------------------------------
@FSQS_BIT(ARG:0, ARG:1)
#FUNCTION
#LOCALSIZE 16
#DIM LCOUNT
#DIM LOADED
IF !LOADED
	SPLIT SAVESTR:合体用ソフトクイック設定, "_", LOCALS, LOADED
	FOR LCOUNT, 0, LOADED
		SIF ISNUMERIC(LOCALS:LCOUNT) && INRANGE(TOINT(LOCALS:LCOUNT), 0, VARSIZE("LOCAL") * 64 - 1)
			SETBIT LOCAL:(TOINT(LOCALS:LCOUNT) >> 6), TOINT(LOCALS:LCOUNT) & 63
	NEXT
	LOADED = 1
ENDIF
SIF !INRANGE(ARG:0, 0, VARSIZE("LOCAL") * 64 - 1)
	THROW @FSQS_BITで範囲外のARG:0（{ARG:0}）
SELECTCASE ARG:1
	CASE -1	;GET
	CASE 0	;GET & CHECK
		RETURNF GETBIT(LOCAL:(ARG:0 >> 6), ARG:0 & 63) && ITEM:(ARG:0)
	CASE 1	;SET
		SETBIT LOCAL:(ARG:0 >> 6), ARG:0 & 63
	CASE 2	;CLEAR
		CLEARBIT LOCAL:(ARG:0 >> 6), ARG:0 & 63
	CASE 3	;INVERT
		INVERTBIT LOCAL:(ARG:0 >> 6), ARG:0 & 63
	CASE 4	;SAVE
		LOCALS:0 '= ""
		FOR LCOUNT, 500, 600
			SIF GETBIT(LOCAL:(LCOUNT >> 6), LCOUNT & 63)
				LOCALS:0 += "_" + TOSTR(LCOUNT)
		NEXT
		SAVESTR:合体用ソフトクイック設定 '= LOCALS:0
	CASE 5	;RESET
		VARSET LOCAL
		SAVESTR:合体用ソフトクイック設定 '= ""
	CASEELSE
		THROW @FSQS_BITで正体不明のARG:1（{ARG:1}）
ENDSELECT
RETURNF GETBIT(LOCAL:(ARG:0 >> 6), ARG:0 & 63)

;-------------------------------------------------
;関数名:合体用ソフトクイック設定
;概　要:合体用ソフトクイック設定メイン関数
;引　数:なし
;戻り値:なし(RESULT保護)
;この作りなら合体用ソフトが増えても平気なはず…
;-------------------------------------------------
@合体用ソフトクイック設定
#LOCALSIZE 6
IF !LOCAL:1
	LOCAL:1 = 1					;初回済みフラグ
	LOCAL:2 = RESULT			;RESULT保護
	LOCAL:3 = CURRENTREDRAW()	;REDRAW値
	LOCAL:4 = GETCOLOR()		;色値
	REDRAW 2
ENDIF
LOCAL:5 = LINECOUNT				;行数
PRINTL 合体リストの下部に表示したいソフトを選んでください
DRAWLINE
FOR LOCAL:0, 500, 600
	IF ITEM:(LOCAL:0) && SOFT_IS_FUSIONSOFT(LOCAL:0)
		SETCOLOR FSQS_BIT(LOCAL:0) ? LOCAL:4 # COLOR("gray")
		PRINTFORM [{LOCAL:0}] %ITEMNAME:(LOCAL:0), 20, LEFT% \@ FSQS_BIT(LOCAL:0) ? [ ON] # [OFF] \@
		CALLFORM SOFT_EXPLAIN_{LOCAL:0}
		SETCOLOR LOCAL:4
	ENDIF
NEXT
DRAWLINE
PRINTL [  0] 戻る
DO
	INPUT
	SIF RESULT && (ITEM:RESULT !| SOFT_IS_FUSIONSOFT(RESULT))
		CLEARLINE 1
LOOP RESULT && (ITEM:RESULT !| SOFT_IS_FUSIONSOFT(RESULT))
IF RESULT
	CALLF FSQS_BIT(RESULT, 3)	;INVERT
	CLEARLINE LINECOUNT - LOCAL:5
	RESTART
ENDIF
;後始末
LOCAL:1 = 0				;フラグ折る
REDRAW LOCAL:3			;REDRAW戻す
CALLF FSQS_BIT(0, 4)	;SAVE
RETURN LOCAL:2			;RESULTを返す



;=====================================
;[28]ステータス画面設定
;=====================================
@SHOW_STATUS_CONFIG
#LOCALSIZE 2
#DIM LCOUNT
LOCAL = LINECOUNT
REDRAW 0
;表示
DRAWLINE
PRINTL ステータス画面/装備変更画面などの表示タイプを設定します。
PRINTL
PRINTL [キャラクタ] 旧来の表示方式です。
PRINTL [ウィンドウ] ステータス情報がウィンドウ画面に収まっている新しい表示方式です。
PRINTL  ※ウィンドウ表示方式はキャラクタ表示方式に比べ、ウィンドウ幅を大きく確保する必要があります。
PRINTL
PRINTL [幅広] 一部の変数と文字の表示領域を、拡張します。
DRAWLINE
PRINTFORM [ 0] %"能力確認ステータス画面" , 28 , LEFT% 
CALL SHOW_ONOFF , FLAG:ステータス画面タイプ , 0 , "キャラクタ" , "ウィンドウ"
PRINTFORM [ 1] %"邪教の館ステータス画面" , 28 , LEFT% 
CALL SHOW_ONOFF , FLAG:ステータス画面タイプ , 1 , "キャラクタ" , "ウィンドウ"
PRINTFORM [ 2] %"装備変更画面" , 28 , LEFT% 
CALL SHOW_ONOFF , FLAG:ステータス画面タイプ , 2 , "キャラクタ" , "ウィンドウ"
PRINTL
PRINTL [90] 全てキャラクタ　　[91] 全てウィンドウ
PRINTL
PRINTFORM [ 3] %"一部の変数と文字の表示領域" , 28 , LEFT%
CALL SHOW_ONOFF , FLAG:カスタムゲーム画面 , 0 , "幅広" , "普通"
IF GETBIT (FLAG:カスタムゲーム画面,0)
	PRINTFORM [ 4] %"スキル名の表示領域" , 28 , LEFT%
	CALL SHOW_ONOFF , FLAG:カスタムゲーム画面 , 1 , "幅広" , "普通"
ENDIF
DRAWLINE
PRINTFORML [100]戻る
REDRAW 1
;入力と処理
$INPUT_LOOP
INPUT
IF RESULT == 100
	RETURN 1
ELSEIF RANGE(RESULT,0,2)
	INVERTBIT FLAG:ステータス画面タイプ , RESULT
ELSEIF RESULT == 3
	INVERTBIT FLAG:カスタムゲーム画面 , 0
	IF FLAG:カスタムゲーム画面 == 1
		FLAG:ショップコマンドを並べる数 = 5
		FLAG:調教コマンドを並べる数 = 5
		FLAG:調教パラメータを並べる数 = 5
	ELSE
		FLAG:ショップコマンドを並べる数 = 3
		FLAG:調教コマンドを並べる数 = 3
		FLAG:調教パラメータを並べる数 = 3
		FLAG:カスタムゲーム画面 = 0
	ENDIF
ELSEIF RESULT == 4
	INVERTBIT FLAG:カスタムゲーム画面 , 1
ELSEIF RESULT == 90
	FOR LCOUNT, 0, 3
		SETBIT FLAG:ステータス画面タイプ, LCOUNT
	NEXT
ELSEIF RESULT == 91
	FLAG:ステータス画面タイプ = 0
ELSE
	CLEARLINE 1
	GOTO INPUT_LOOP
ENDIF
REDRAW 0
CLEARLINE LINECOUNT - LOCAL
RESTART


@SHOW_ONOFF(ARG , ARG:1 = 0 ,  ARGS = "  ON" , ARGS:1 = " OFF")
PRINT [
IF GETBIT(ARG , ARG:1)
	SETCOLOR COLOR("AQUA")
ELSE
	SETCOLOR COLOR("GRAY")
ENDIF
PRINTFORM %ARGS%
RESETCOLOR
PRINT  / 
IF !GETBIT(ARG , ARG:1)
	SETCOLOR COLOR("AQUA")
ELSE
	SETCOLOR COLOR("GRAY")
ENDIF
PRINTFORM  %ARGS:1%
RESETCOLOR
PRINTL ]

;==============================================================

;@合体用ソフトクイック設定_OPTION
;#LOCALSIZE 1
;#LOCALSSIZE 6
;#DIM LCOUNT
;$合体用ソフトクイック設定_LOOP
;LOCAL = -1
;PRINTL 合体リストの下部に表示したいソフトを選んでください
;SIF ITEM:アルバート
;	LOCALS = [0] アルバート　　合体事故の発生を防ぐ。※コペルニクスと同時使用すると意味を為さない。
;SIF ITEM:パラケルスス
;	LOCALS:1 = [1] パラケルスス　悪魔合体時、元のレベルの代わりに現在の悪魔のレベルを使用する。
;SIF ITEM:ラプラス
;	LOCALS:2 = [2] ラプラス　　　悪魔合体時、レベルの高い悪魔が出来やすくなる。
;SIF ITEM:コペルニクス
;	LOCALS:3 = [3] コペルニクス　悪魔合体時、合体事故が発生しやすくなる。※アルバートと同時使用すると意味を為さない。
;SIF ITEM:ゴエティア
;	LOCALS:4 = [4] ゴエティア　　悪魔合体時、通常のオトコ悪魔2身合体において合体結果「天使」を「堕天使」に変更するコンバータ。
;SIF ITEM:ラジエルの書
;	LOCALS:5 = [5] ラジエルの書　悪魔合体時、合体結果が特定の悪魔である場合、合体結果の悪魔をデビルチルドレン仕様に変更するコンバータ。
;FOR LCOUNT, 0, 6
;	;所持していない場合は飛ばす
;	STRLENFORM %LOCALS:LCOUNT%
;	SIF RESULT == 0
;		CONTINUE
;	;オンオフ判定
;	IF GETBIT(FLAG:合体用ソフトクイック設定, LCOUNT) == 1
;		RESETCOLOR
;	ELSE
;		SETCOLOR COLOR("灰色")
;	ENDIF
;	PRINTFORML %LOCALS:LCOUNT%
;NEXT
;RESETCOLOR
;PRINTFORML [100] もどる
;CALL INPUTINT,0,1,2,3,4,5,100
;
;IF RESULT == 100
;	;一つでもオンにしている場合
;	FOR LCOUNT, 0, 6
;		IF GETBIT(FLAG:合体用ソフトクイック設定, LCOUNT) == 1
;		PRINT ON
;			SETBIT FLAG:合体用ソフトクイック設定, 6
;			RETURN
;		ENDIF
;	NEXT
;	;全てオフの場合
;	PRINT OFF
;	CLEARBIT FLAG:合体用ソフトクイック設定, 6
;	RETURN
;ENDIF
;
;IF GETBIT(FLAG:合体用ソフトクイック設定, RESULT) == 1
;	CLEARBIT FLAG:合体用ソフトクイック設定, RESULT
;ELSE
;	SETBIT FLAG:合体用ソフトクイック設定, RESULT
;ENDIF
;GOTO 合体用ソフトクイック設定_LOOP
