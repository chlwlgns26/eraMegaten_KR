K_CALLには文字列を入れることができ、その文字列をCALLで呼び出します
ただし、引数は設定できず「,()」のいずれか3文字を入れてしまうとエラーが出ます。
存在しないものを呼び出してもエラーが出ます。

ただし、K_CALLはあまり使わない方がいい
通常の口上でCALLを使う場合は以下の方をお勧めする

NSTR:(K++) = 今日の
CALL posipisi

@posipisi
KSTR:(K++) = 晩御飯

※シアノの口上がこの型を使ってます
========================
K_CALLのおすすめの使い道
========================
①AA(アスキーアート)を使う時
②TRAIN_MASSEGE等の既存の必ずPRINTを使用している関数を呼び出す時
③半角のアンダーバー(_)をどうしても口上で使用したいとき

※KSTR:(K++)の場合、PRINT_STRを経由してしまうため_が消えてしまう
　なのでKSTR:(K++)はAA使用に不向き
======
使用例
======
K_CALL:K = SIAN
KSTR:(K++) = SIANをK_CALLで呼び出したい
K_CALL:K = RED
K_CALL:K = YERROW
;↑二回連続で設定しても読み込むのは一つ
;※この場合後から入力したYERROWのほうになる

@SIAN
PRINTL シ_ア_ン
;↑K_CALLで呼び出す口上はPRINTを使用する
;※KSTR:(K++) = にしてしまうと一番最後にそれを喋るようになる
@RED
PRINTL レッド
@YERROW
PRINTL 黄色

上記の準備で口上変数表示を呼び出す

結果
↓
シ_ア_ン
SIANをKCALLで呼び出したい
黄色
;一行目はPRINTで表示してるので_を書き込んでる
;二行目はPRINT_STRを経由しているので_が消えている
;三行目はREDが上書きされてYERROWを呼び出してる